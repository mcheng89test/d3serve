// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Hero.proto

#ifndef PROTOBUF_Hero_2eproto__INCLUDED
#define PROTOBUF_Hero_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "AttributeSerializer.pb.h"
#include "Hireling.pb.h"
#include "Items.pb.h"
#include "OnlineService.pb.h"
// @@protoc_insertion_point(includes)

namespace D3 {
namespace Hero {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Hero_2eproto();
void protobuf_AssignDesc_Hero_2eproto();
void protobuf_ShutdownFile_Hero_2eproto();

class VisualItem;
class VisualEquipment;
class QuestHistoryEntry;
class QuestRewardHistoryEntry;
class Digest;
class HotbarButtonData;
class SkillKeyMapping;
class SavedQuest;
class LearnedLore;
class SavedConversations;
class SavePointData_Proto;
class SavedData;
class Timestamps;
class SavedDefinition;
class NameSequence;
class NameText;
class Escrow;

// ===================================================================

class VisualItem : public ::google::protobuf::Message {
 public:
  VisualItem();
  virtual ~VisualItem();
  
  VisualItem(const VisualItem& from);
  
  inline VisualItem& operator=(const VisualItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const VisualItem& default_instance();
  
  void Swap(VisualItem* other);
  
  // implements Message ----------------------------------------------
  
  VisualItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VisualItem& from);
  void MergeFrom(const VisualItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional sfixed32 gbid = 1;
  inline bool has_gbid() const;
  inline void clear_gbid();
  static const int kGbidFieldNumber = 1;
  inline ::google::protobuf::int32 gbid() const;
  inline void set_gbid(::google::protobuf::int32 value);
  
  // optional sint32 dye_type = 2;
  inline bool has_dye_type() const;
  inline void clear_dye_type();
  static const int kDyeTypeFieldNumber = 2;
  inline ::google::protobuf::int32 dye_type() const;
  inline void set_dye_type(::google::protobuf::int32 value);
  
  // optional sint32 item_effect_type = 3;
  inline bool has_item_effect_type() const;
  inline void clear_item_effect_type();
  static const int kItemEffectTypeFieldNumber = 3;
  inline ::google::protobuf::int32 item_effect_type() const;
  inline void set_item_effect_type(::google::protobuf::int32 value);
  
  // optional sint32 effect_level = 4;
  inline bool has_effect_level() const;
  inline void clear_effect_level();
  static const int kEffectLevelFieldNumber = 4;
  inline ::google::protobuf::int32 effect_level() const;
  inline void set_effect_level(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:D3.Hero.VisualItem)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 gbid_;
  ::google::protobuf::int32 dye_type_;
  ::google::protobuf::int32 item_effect_type_;
  ::google::protobuf::int32 effect_level_;
  friend void  protobuf_AddDesc_Hero_2eproto();
  friend void protobuf_AssignDesc_Hero_2eproto();
  friend void protobuf_ShutdownFile_Hero_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static VisualItem* default_instance_;
};
// -------------------------------------------------------------------

class VisualEquipment : public ::google::protobuf::Message {
 public:
  VisualEquipment();
  virtual ~VisualEquipment();
  
  VisualEquipment(const VisualEquipment& from);
  
  inline VisualEquipment& operator=(const VisualEquipment& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const VisualEquipment& default_instance();
  
  void Swap(VisualEquipment* other);
  
  // implements Message ----------------------------------------------
  
  VisualEquipment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VisualEquipment& from);
  void MergeFrom(const VisualEquipment& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .D3.Hero.VisualItem visual_item = 1;
  inline int visual_item_size() const;
  inline void clear_visual_item();
  static const int kVisualItemFieldNumber = 1;
  inline const ::D3::Hero::VisualItem& visual_item(int index) const;
  inline ::D3::Hero::VisualItem* mutable_visual_item(int index);
  inline ::D3::Hero::VisualItem* add_visual_item();
  inline const ::google::protobuf::RepeatedPtrField< ::D3::Hero::VisualItem >&
      visual_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::D3::Hero::VisualItem >*
      mutable_visual_item();
  
  // @@protoc_insertion_point(class_scope:D3.Hero.VisualEquipment)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::D3::Hero::VisualItem > visual_item_;
  friend void  protobuf_AddDesc_Hero_2eproto();
  friend void protobuf_AssignDesc_Hero_2eproto();
  friend void protobuf_ShutdownFile_Hero_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static VisualEquipment* default_instance_;
};
// -------------------------------------------------------------------

class QuestHistoryEntry : public ::google::protobuf::Message {
 public:
  QuestHistoryEntry();
  virtual ~QuestHistoryEntry();
  
  QuestHistoryEntry(const QuestHistoryEntry& from);
  
  inline QuestHistoryEntry& operator=(const QuestHistoryEntry& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestHistoryEntry& default_instance();
  
  void Swap(QuestHistoryEntry* other);
  
  // implements Message ----------------------------------------------
  
  QuestHistoryEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestHistoryEntry& from);
  void MergeFrom(const QuestHistoryEntry& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required sfixed32 sno_quest = 1;
  inline bool has_sno_quest() const;
  inline void clear_sno_quest();
  static const int kSnoQuestFieldNumber = 1;
  inline ::google::protobuf::int32 sno_quest() const;
  inline void set_sno_quest(::google::protobuf::int32 value);
  
  // required sint32 difficulty = 2;
  inline bool has_difficulty() const;
  inline void clear_difficulty();
  static const int kDifficultyFieldNumber = 2;
  inline ::google::protobuf::int32 difficulty() const;
  inline void set_difficulty(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:D3.Hero.QuestHistoryEntry)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 sno_quest_;
  ::google::protobuf::int32 difficulty_;
  friend void  protobuf_AddDesc_Hero_2eproto();
  friend void protobuf_AssignDesc_Hero_2eproto();
  friend void protobuf_ShutdownFile_Hero_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static QuestHistoryEntry* default_instance_;
};
// -------------------------------------------------------------------

class QuestRewardHistoryEntry : public ::google::protobuf::Message {
 public:
  QuestRewardHistoryEntry();
  virtual ~QuestRewardHistoryEntry();
  
  QuestRewardHistoryEntry(const QuestRewardHistoryEntry& from);
  
  inline QuestRewardHistoryEntry& operator=(const QuestRewardHistoryEntry& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestRewardHistoryEntry& default_instance();
  
  void Swap(QuestRewardHistoryEntry* other);
  
  // implements Message ----------------------------------------------
  
  QuestRewardHistoryEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestRewardHistoryEntry& from);
  void MergeFrom(const QuestRewardHistoryEntry& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required sfixed32 sno_quest = 1;
  inline bool has_sno_quest() const;
  inline void clear_sno_quest();
  static const int kSnoQuestFieldNumber = 1;
  inline ::google::protobuf::int32 sno_quest() const;
  inline void set_sno_quest(::google::protobuf::int32 value);
  
  // required sint32 step_uid = 2;
  inline bool has_step_uid() const;
  inline void clear_step_uid();
  static const int kStepUidFieldNumber = 2;
  inline ::google::protobuf::int32 step_uid() const;
  inline void set_step_uid(::google::protobuf::int32 value);
  
  // required sint32 difficulty = 3;
  inline bool has_difficulty() const;
  inline void clear_difficulty();
  static const int kDifficultyFieldNumber = 3;
  inline ::google::protobuf::int32 difficulty() const;
  inline void set_difficulty(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:D3.Hero.QuestRewardHistoryEntry)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 sno_quest_;
  ::google::protobuf::int32 step_uid_;
  ::google::protobuf::int32 difficulty_;
  friend void  protobuf_AddDesc_Hero_2eproto();
  friend void protobuf_AssignDesc_Hero_2eproto();
  friend void protobuf_ShutdownFile_Hero_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static QuestRewardHistoryEntry* default_instance_;
};
// -------------------------------------------------------------------

class Digest : public ::google::protobuf::Message {
 public:
  Digest();
  virtual ~Digest();
  
  Digest(const Digest& from);
  
  inline Digest& operator=(const Digest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Digest& default_instance();
  
  void Swap(Digest* other);
  
  // implements Message ----------------------------------------------
  
  Digest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Digest& from);
  void MergeFrom(const Digest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);
  
  // required .D3.OnlineService.EntityId hero_id = 2;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  inline const ::D3::OnlineService::EntityId& hero_id() const;
  inline ::D3::OnlineService::EntityId* mutable_hero_id();
  
  // required string hero_name = 3;
  inline bool has_hero_name() const;
  inline void clear_hero_name();
  static const int kHeroNameFieldNumber = 3;
  inline const ::std::string& hero_name() const;
  inline void set_hero_name(const ::std::string& value);
  inline void set_hero_name(const char* value);
  inline void set_hero_name(const char* value, size_t size);
  inline ::std::string* mutable_hero_name();
  
  // required sfixed32 gbid_class = 4;
  inline bool has_gbid_class() const;
  inline void clear_gbid_class();
  static const int kGbidClassFieldNumber = 4;
  inline ::google::protobuf::int32 gbid_class() const;
  inline void set_gbid_class(::google::protobuf::int32 value);
  
  // required sint32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // required uint32 player_flags = 6;
  inline bool has_player_flags() const;
  inline void clear_player_flags();
  static const int kPlayerFlagsFieldNumber = 6;
  inline ::google::protobuf::uint32 player_flags() const;
  inline void set_player_flags(::google::protobuf::uint32 value);
  
  // required .D3.Hero.VisualEquipment visual_equipment = 7;
  inline bool has_visual_equipment() const;
  inline void clear_visual_equipment();
  static const int kVisualEquipmentFieldNumber = 7;
  inline const ::D3::Hero::VisualEquipment& visual_equipment() const;
  inline ::D3::Hero::VisualEquipment* mutable_visual_equipment();
  
  // repeated .D3.Hero.QuestHistoryEntry quest_history = 8;
  inline int quest_history_size() const;
  inline void clear_quest_history();
  static const int kQuestHistoryFieldNumber = 8;
  inline const ::D3::Hero::QuestHistoryEntry& quest_history(int index) const;
  inline ::D3::Hero::QuestHistoryEntry* mutable_quest_history(int index);
  inline ::D3::Hero::QuestHistoryEntry* add_quest_history();
  inline const ::google::protobuf::RepeatedPtrField< ::D3::Hero::QuestHistoryEntry >&
      quest_history() const;
  inline ::google::protobuf::RepeatedPtrField< ::D3::Hero::QuestHistoryEntry >*
      mutable_quest_history();
  
  // required sint32 last_played_act = 10;
  inline bool has_last_played_act() const;
  inline void clear_last_played_act();
  static const int kLastPlayedActFieldNumber = 10;
  inline ::google::protobuf::int32 last_played_act() const;
  inline void set_last_played_act(::google::protobuf::int32 value);
  
  // required sint32 highest_unlocked_act = 11;
  inline bool has_highest_unlocked_act() const;
  inline void clear_highest_unlocked_act();
  static const int kHighestUnlockedActFieldNumber = 11;
  inline ::google::protobuf::int32 highest_unlocked_act() const;
  inline void set_highest_unlocked_act(::google::protobuf::int32 value);
  
  // required sint32 last_played_difficulty = 12;
  inline bool has_last_played_difficulty() const;
  inline void clear_last_played_difficulty();
  static const int kLastPlayedDifficultyFieldNumber = 12;
  inline ::google::protobuf::int32 last_played_difficulty() const;
  inline void set_last_played_difficulty(::google::protobuf::int32 value);
  
  // required sint32 highest_unlocked_difficulty = 13;
  inline bool has_highest_unlocked_difficulty() const;
  inline void clear_highest_unlocked_difficulty();
  static const int kHighestUnlockedDifficultyFieldNumber = 13;
  inline ::google::protobuf::int32 highest_unlocked_difficulty() const;
  inline void set_highest_unlocked_difficulty(::google::protobuf::int32 value);
  
  // required sfixed32 last_played_quest = 14;
  inline bool has_last_played_quest() const;
  inline void clear_last_played_quest();
  static const int kLastPlayedQuestFieldNumber = 14;
  inline ::google::protobuf::int32 last_played_quest() const;
  inline void set_last_played_quest(::google::protobuf::int32 value);
  
  // required sint32 last_played_quest_step = 15;
  inline bool has_last_played_quest_step() const;
  inline void clear_last_played_quest_step();
  static const int kLastPlayedQuestStepFieldNumber = 15;
  inline ::google::protobuf::int32 last_played_quest_step() const;
  inline void set_last_played_quest_step(::google::protobuf::int32 value);
  
  // required uint32 time_played = 16;
  inline bool has_time_played() const;
  inline void clear_time_played();
  static const int kTimePlayedFieldNumber = 16;
  inline ::google::protobuf::uint32 time_played() const;
  inline void set_time_played(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:D3.Hero.Digest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 version_;
  ::D3::OnlineService::EntityId* hero_id_;
  ::std::string* hero_name_;
  static const ::std::string _default_hero_name_;
  ::google::protobuf::int32 gbid_class_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::uint32 player_flags_;
  ::D3::Hero::VisualEquipment* visual_equipment_;
  ::google::protobuf::RepeatedPtrField< ::D3::Hero::QuestHistoryEntry > quest_history_;
  ::google::protobuf::int32 last_played_act_;
  ::google::protobuf::int32 highest_unlocked_act_;
  ::google::protobuf::int32 last_played_difficulty_;
  ::google::protobuf::int32 highest_unlocked_difficulty_;
  ::google::protobuf::int32 last_played_quest_;
  ::google::protobuf::int32 last_played_quest_step_;
  ::google::protobuf::uint32 time_played_;
  friend void  protobuf_AddDesc_Hero_2eproto();
  friend void protobuf_AssignDesc_Hero_2eproto();
  friend void protobuf_ShutdownFile_Hero_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Digest* default_instance_;
};
// -------------------------------------------------------------------

class HotbarButtonData : public ::google::protobuf::Message {
 public:
  HotbarButtonData();
  virtual ~HotbarButtonData();
  
  HotbarButtonData(const HotbarButtonData& from);
  
  inline HotbarButtonData& operator=(const HotbarButtonData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const HotbarButtonData& default_instance();
  
  void Swap(HotbarButtonData* other);
  
  // implements Message ----------------------------------------------
  
  HotbarButtonData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HotbarButtonData& from);
  void MergeFrom(const HotbarButtonData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required sfixed32 sno_power = 1;
  inline bool has_sno_power() const;
  inline void clear_sno_power();
  static const int kSnoPowerFieldNumber = 1;
  inline ::google::protobuf::int32 sno_power() const;
  inline void set_sno_power(::google::protobuf::int32 value);
  
  // required sfixed32 gbid_item = 2;
  inline bool has_gbid_item() const;
  inline void clear_gbid_item();
  static const int kGbidItemFieldNumber = 2;
  inline ::google::protobuf::int32 gbid_item() const;
  inline void set_gbid_item(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:D3.Hero.HotbarButtonData)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 sno_power_;
  ::google::protobuf::int32 gbid_item_;
  friend void  protobuf_AddDesc_Hero_2eproto();
  friend void protobuf_AssignDesc_Hero_2eproto();
  friend void protobuf_ShutdownFile_Hero_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static HotbarButtonData* default_instance_;
};
// -------------------------------------------------------------------

class SkillKeyMapping : public ::google::protobuf::Message {
 public:
  SkillKeyMapping();
  virtual ~SkillKeyMapping();
  
  SkillKeyMapping(const SkillKeyMapping& from);
  
  inline SkillKeyMapping& operator=(const SkillKeyMapping& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillKeyMapping& default_instance();
  
  void Swap(SkillKeyMapping* other);
  
  // implements Message ----------------------------------------------
  
  SkillKeyMapping* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillKeyMapping& from);
  void MergeFrom(const SkillKeyMapping& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required sfixed32 sno_power = 1;
  inline bool has_sno_power() const;
  inline void clear_sno_power();
  static const int kSnoPowerFieldNumber = 1;
  inline ::google::protobuf::int32 sno_power() const;
  inline void set_sno_power(::google::protobuf::int32 value);
  
  // required sint32 id_hotkey = 2;
  inline bool has_id_hotkey() const;
  inline void clear_id_hotkey();
  static const int kIdHotkeyFieldNumber = 2;
  inline ::google::protobuf::int32 id_hotkey() const;
  inline void set_id_hotkey(::google::protobuf::int32 value);
  
  // required sint32 skill_button = 3;
  inline bool has_skill_button() const;
  inline void clear_skill_button();
  static const int kSkillButtonFieldNumber = 3;
  inline ::google::protobuf::int32 skill_button() const;
  inline void set_skill_button(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:D3.Hero.SkillKeyMapping)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 sno_power_;
  ::google::protobuf::int32 id_hotkey_;
  ::google::protobuf::int32 skill_button_;
  friend void  protobuf_AddDesc_Hero_2eproto();
  friend void protobuf_AssignDesc_Hero_2eproto();
  friend void protobuf_ShutdownFile_Hero_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SkillKeyMapping* default_instance_;
};
// -------------------------------------------------------------------

class SavedQuest : public ::google::protobuf::Message {
 public:
  SavedQuest();
  virtual ~SavedQuest();
  
  SavedQuest(const SavedQuest& from);
  
  inline SavedQuest& operator=(const SavedQuest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SavedQuest& default_instance();
  
  void Swap(SavedQuest* other);
  
  // implements Message ----------------------------------------------
  
  SavedQuest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SavedQuest& from);
  void MergeFrom(const SavedQuest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required sfixed32 sno_quest = 1;
  inline bool has_sno_quest() const;
  inline void clear_sno_quest();
  static const int kSnoQuestFieldNumber = 1;
  inline ::google::protobuf::int32 sno_quest() const;
  inline void set_sno_quest(::google::protobuf::int32 value);
  
  // required sint32 difficulty = 2;
  inline bool has_difficulty() const;
  inline void clear_difficulty();
  static const int kDifficultyFieldNumber = 2;
  inline ::google::protobuf::int32 difficulty() const;
  inline void set_difficulty(::google::protobuf::int32 value);
  
  // required sint32 current_step_uid = 3;
  inline bool has_current_step_uid() const;
  inline void clear_current_step_uid();
  static const int kCurrentStepUidFieldNumber = 3;
  inline ::google::protobuf::int32 current_step_uid() const;
  inline void set_current_step_uid(::google::protobuf::int32 value);
  
  // repeated sint32 objective_state = 4;
  inline int objective_state_size() const;
  inline void clear_objective_state();
  static const int kObjectiveStateFieldNumber = 4;
  inline ::google::protobuf::int32 objective_state(int index) const;
  inline void set_objective_state(int index, ::google::protobuf::int32 value);
  inline void add_objective_state(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      objective_state() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_objective_state();
  
  // repeated sint32 failure_condition_state = 5;
  inline int failure_condition_state_size() const;
  inline void clear_failure_condition_state();
  static const int kFailureConditionStateFieldNumber = 5;
  inline ::google::protobuf::int32 failure_condition_state(int index) const;
  inline void set_failure_condition_state(int index, ::google::protobuf::int32 value);
  inline void add_failure_condition_state(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      failure_condition_state() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_failure_condition_state();
  
  // @@protoc_insertion_point(class_scope:D3.Hero.SavedQuest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 sno_quest_;
  ::google::protobuf::int32 difficulty_;
  ::google::protobuf::int32 current_step_uid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > objective_state_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > failure_condition_state_;
  friend void  protobuf_AddDesc_Hero_2eproto();
  friend void protobuf_AssignDesc_Hero_2eproto();
  friend void protobuf_ShutdownFile_Hero_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SavedQuest* default_instance_;
};
// -------------------------------------------------------------------

class LearnedLore : public ::google::protobuf::Message {
 public:
  LearnedLore();
  virtual ~LearnedLore();
  
  LearnedLore(const LearnedLore& from);
  
  inline LearnedLore& operator=(const LearnedLore& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LearnedLore& default_instance();
  
  void Swap(LearnedLore* other);
  
  // implements Message ----------------------------------------------
  
  LearnedLore* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LearnedLore& from);
  void MergeFrom(const LearnedLore& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated sfixed32 sno_lore_learned = 1;
  inline int sno_lore_learned_size() const;
  inline void clear_sno_lore_learned();
  static const int kSnoLoreLearnedFieldNumber = 1;
  inline ::google::protobuf::int32 sno_lore_learned(int index) const;
  inline void set_sno_lore_learned(int index, ::google::protobuf::int32 value);
  inline void add_sno_lore_learned(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      sno_lore_learned() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_sno_lore_learned();
  
  // @@protoc_insertion_point(class_scope:D3.Hero.LearnedLore)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > sno_lore_learned_;
  friend void  protobuf_AddDesc_Hero_2eproto();
  friend void protobuf_AssignDesc_Hero_2eproto();
  friend void protobuf_ShutdownFile_Hero_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static LearnedLore* default_instance_;
};
// -------------------------------------------------------------------

class SavedConversations : public ::google::protobuf::Message {
 public:
  SavedConversations();
  virtual ~SavedConversations();
  
  SavedConversations(const SavedConversations& from);
  
  inline SavedConversations& operator=(const SavedConversations& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SavedConversations& default_instance();
  
  void Swap(SavedConversations* other);
  
  // implements Message ----------------------------------------------
  
  SavedConversations* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SavedConversations& from);
  void MergeFrom(const SavedConversations& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes played_conversations_bitfield = 1;
  inline bool has_played_conversations_bitfield() const;
  inline void clear_played_conversations_bitfield();
  static const int kPlayedConversationsBitfieldFieldNumber = 1;
  inline const ::std::string& played_conversations_bitfield() const;
  inline void set_played_conversations_bitfield(const ::std::string& value);
  inline void set_played_conversations_bitfield(const char* value);
  inline void set_played_conversations_bitfield(const void* value, size_t size);
  inline ::std::string* mutable_played_conversations_bitfield();
  
  // repeated sfixed32 sno_saved_conversations = 2;
  inline int sno_saved_conversations_size() const;
  inline void clear_sno_saved_conversations();
  static const int kSnoSavedConversationsFieldNumber = 2;
  inline ::google::protobuf::int32 sno_saved_conversations(int index) const;
  inline void set_sno_saved_conversations(int index, ::google::protobuf::int32 value);
  inline void add_sno_saved_conversations(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      sno_saved_conversations() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_sno_saved_conversations();
  
  // @@protoc_insertion_point(class_scope:D3.Hero.SavedConversations)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* played_conversations_bitfield_;
  static const ::std::string _default_played_conversations_bitfield_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > sno_saved_conversations_;
  friend void  protobuf_AddDesc_Hero_2eproto();
  friend void protobuf_AssignDesc_Hero_2eproto();
  friend void protobuf_ShutdownFile_Hero_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SavedConversations* default_instance_;
};
// -------------------------------------------------------------------

class SavePointData_Proto : public ::google::protobuf::Message {
 public:
  SavePointData_Proto();
  virtual ~SavePointData_Proto();
  
  SavePointData_Proto(const SavePointData_Proto& from);
  
  inline SavePointData_Proto& operator=(const SavePointData_Proto& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SavePointData_Proto& default_instance();
  
  void Swap(SavePointData_Proto* other);
  
  // implements Message ----------------------------------------------
  
  SavePointData_Proto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SavePointData_Proto& from);
  void MergeFrom(const SavePointData_Proto& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required sfixed32 sno_world = 1;
  inline bool has_sno_world() const;
  inline void clear_sno_world();
  static const int kSnoWorldFieldNumber = 1;
  inline ::google::protobuf::int32 sno_world() const;
  inline void set_sno_world(::google::protobuf::int32 value);
  
  // required sint32 savepoint_number = 2;
  inline bool has_savepoint_number() const;
  inline void clear_savepoint_number();
  static const int kSavepointNumberFieldNumber = 2;
  inline ::google::protobuf::int32 savepoint_number() const;
  inline void set_savepoint_number(::google::protobuf::int32 value);
  
  // required uint32 creates_portal = 3;
  inline bool has_creates_portal() const;
  inline void clear_creates_portal();
  static const int kCreatesPortalFieldNumber = 3;
  inline ::google::protobuf::uint32 creates_portal() const;
  inline void set_creates_portal(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:D3.Hero.SavePointData_Proto)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 sno_world_;
  ::google::protobuf::int32 savepoint_number_;
  ::google::protobuf::uint32 creates_portal_;
  friend void  protobuf_AddDesc_Hero_2eproto();
  friend void protobuf_AssignDesc_Hero_2eproto();
  friend void protobuf_ShutdownFile_Hero_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SavePointData_Proto* default_instance_;
};
// -------------------------------------------------------------------

class SavedData : public ::google::protobuf::Message {
 public:
  SavedData();
  virtual ~SavedData();
  
  SavedData(const SavedData& from);
  
  inline SavedData& operator=(const SavedData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SavedData& default_instance();
  
  void Swap(SavedData* other);
  
  // implements Message ----------------------------------------------
  
  SavedData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SavedData& from);
  void MergeFrom(const SavedData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .D3.Hero.HotbarButtonData hotbar_button_assignments = 1;
  inline int hotbar_button_assignments_size() const;
  inline void clear_hotbar_button_assignments();
  static const int kHotbarButtonAssignmentsFieldNumber = 1;
  inline const ::D3::Hero::HotbarButtonData& hotbar_button_assignments(int index) const;
  inline ::D3::Hero::HotbarButtonData* mutable_hotbar_button_assignments(int index);
  inline ::D3::Hero::HotbarButtonData* add_hotbar_button_assignments();
  inline const ::google::protobuf::RepeatedPtrField< ::D3::Hero::HotbarButtonData >&
      hotbar_button_assignments() const;
  inline ::google::protobuf::RepeatedPtrField< ::D3::Hero::HotbarButtonData >*
      mutable_hotbar_button_assignments();
  
  // repeated .D3.Hero.SkillKeyMapping skill_key_map = 2;
  inline int skill_key_map_size() const;
  inline void clear_skill_key_map();
  static const int kSkillKeyMapFieldNumber = 2;
  inline const ::D3::Hero::SkillKeyMapping& skill_key_map(int index) const;
  inline ::D3::Hero::SkillKeyMapping* mutable_skill_key_map(int index);
  inline ::D3::Hero::SkillKeyMapping* add_skill_key_map();
  inline const ::google::protobuf::RepeatedPtrField< ::D3::Hero::SkillKeyMapping >&
      skill_key_map() const;
  inline ::google::protobuf::RepeatedPtrField< ::D3::Hero::SkillKeyMapping >*
      mutable_skill_key_map();
  
  // required uint32 time_played = 3;
  inline bool has_time_played() const;
  inline void clear_time_played();
  static const int kTimePlayedFieldNumber = 3;
  inline ::google::protobuf::uint32 time_played() const;
  inline void set_time_played(::google::protobuf::uint32 value);
  
  // required uint32 activated_waypoints = 4;
  inline bool has_activated_waypoints() const;
  inline void clear_activated_waypoints();
  static const int kActivatedWaypointsFieldNumber = 4;
  inline ::google::protobuf::uint32 activated_waypoints() const;
  inline void set_activated_waypoints(::google::protobuf::uint32 value);
  
  // required .D3.Hireling.SavedData hireling_saved_data = 5;
  inline bool has_hireling_saved_data() const;
  inline void clear_hireling_saved_data();
  static const int kHirelingSavedDataFieldNumber = 5;
  inline const ::D3::Hireling::SavedData& hireling_saved_data() const;
  inline ::D3::Hireling::SavedData* mutable_hireling_saved_data();
  
  // required uint32 last_level_time = 6;
  inline bool has_last_level_time() const;
  inline void clear_last_level_time();
  static const int kLastLevelTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 last_level_time() const;
  inline void set_last_level_time(::google::protobuf::uint32 value);
  
  // required .D3.Hero.LearnedLore learned_lore = 7;
  inline bool has_learned_lore() const;
  inline void clear_learned_lore();
  static const int kLearnedLoreFieldNumber = 7;
  inline const ::D3::Hero::LearnedLore& learned_lore() const;
  inline ::D3::Hero::LearnedLore* mutable_learned_lore();
  
  // required .D3.Hero.SavedConversations saved_conversations = 8;
  inline bool has_saved_conversations() const;
  inline void clear_saved_conversations();
  static const int kSavedConversationsFieldNumber = 8;
  inline const ::D3::Hero::SavedConversations& saved_conversations() const;
  inline ::D3::Hero::SavedConversations* mutable_saved_conversations();
  
  // repeated sfixed32 sno_active_skills = 9;
  inline int sno_active_skills_size() const;
  inline void clear_sno_active_skills();
  static const int kSnoActiveSkillsFieldNumber = 9;
  inline ::google::protobuf::int32 sno_active_skills(int index) const;
  inline void set_sno_active_skills(int index, ::google::protobuf::int32 value);
  inline void add_sno_active_skills(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      sno_active_skills() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_sno_active_skills();
  
  // repeated sfixed32 sno_traits = 10;
  inline int sno_traits_size() const;
  inline void clear_sno_traits();
  static const int kSnoTraitsFieldNumber = 10;
  inline ::google::protobuf::int32 sno_traits(int index) const;
  inline void set_sno_traits(int index, ::google::protobuf::int32 value);
  inline void add_sno_traits(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      sno_traits() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_sno_traits();
  
  // repeated sfixed32 seen_tutorials = 11;
  inline int seen_tutorials_size() const;
  inline void clear_seen_tutorials();
  static const int kSeenTutorialsFieldNumber = 11;
  inline ::google::protobuf::int32 seen_tutorials(int index) const;
  inline void set_seen_tutorials(int index, ::google::protobuf::int32 value);
  inline void add_seen_tutorials(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      seen_tutorials() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_seen_tutorials();
  
  // required .D3.Hero.SavePointData_Proto save_point = 12;
  inline bool has_save_point() const;
  inline void clear_save_point();
  static const int kSavePointFieldNumber = 12;
  inline const ::D3::Hero::SavePointData_Proto& save_point() const;
  inline ::D3::Hero::SavePointData_Proto* mutable_save_point();
  
  // @@protoc_insertion_point(class_scope:D3.Hero.SavedData)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::D3::Hero::HotbarButtonData > hotbar_button_assignments_;
  ::google::protobuf::RepeatedPtrField< ::D3::Hero::SkillKeyMapping > skill_key_map_;
  ::google::protobuf::uint32 time_played_;
  ::google::protobuf::uint32 activated_waypoints_;
  ::D3::Hireling::SavedData* hireling_saved_data_;
  ::google::protobuf::uint32 last_level_time_;
  ::D3::Hero::LearnedLore* learned_lore_;
  ::D3::Hero::SavedConversations* saved_conversations_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > sno_active_skills_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > sno_traits_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > seen_tutorials_;
  ::D3::Hero::SavePointData_Proto* save_point_;
  friend void  protobuf_AddDesc_Hero_2eproto();
  friend void protobuf_AssignDesc_Hero_2eproto();
  friend void protobuf_ShutdownFile_Hero_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SavedData* default_instance_;
};
// -------------------------------------------------------------------

class Timestamps : public ::google::protobuf::Message {
 public:
  Timestamps();
  virtual ~Timestamps();
  
  Timestamps(const Timestamps& from);
  
  inline Timestamps& operator=(const Timestamps& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Timestamps& default_instance();
  
  void Swap(Timestamps* other);
  
  // implements Message ----------------------------------------------
  
  Timestamps* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Timestamps& from);
  void MergeFrom(const Timestamps& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required sint64 create_time = 1;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 1;
  inline ::google::protobuf::int64 create_time() const;
  inline void set_create_time(::google::protobuf::int64 value);
  
  // optional sint64 delete_time = 2;
  inline bool has_delete_time() const;
  inline void clear_delete_time();
  static const int kDeleteTimeFieldNumber = 2;
  inline ::google::protobuf::int64 delete_time() const;
  inline void set_delete_time(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:D3.Hero.Timestamps)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 create_time_;
  ::google::protobuf::int64 delete_time_;
  friend void  protobuf_AddDesc_Hero_2eproto();
  friend void protobuf_AssignDesc_Hero_2eproto();
  friend void protobuf_ShutdownFile_Hero_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Timestamps* default_instance_;
};
// -------------------------------------------------------------------

class SavedDefinition : public ::google::protobuf::Message {
 public:
  SavedDefinition();
  virtual ~SavedDefinition();
  
  SavedDefinition(const SavedDefinition& from);
  
  inline SavedDefinition& operator=(const SavedDefinition& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SavedDefinition& default_instance();
  
  void Swap(SavedDefinition* other);
  
  // implements Message ----------------------------------------------
  
  SavedDefinition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SavedDefinition& from);
  void MergeFrom(const SavedDefinition& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);
  
  // optional .D3.Hero.Digest digest = 2;
  inline bool has_digest() const;
  inline void clear_digest();
  static const int kDigestFieldNumber = 2;
  inline const ::D3::Hero::Digest& digest() const;
  inline ::D3::Hero::Digest* mutable_digest();
  
  // required .D3.AttributeSerializer.SavedAttributes saved_attributes = 3;
  inline bool has_saved_attributes() const;
  inline void clear_saved_attributes();
  static const int kSavedAttributesFieldNumber = 3;
  inline const ::D3::AttributeSerializer::SavedAttributes& saved_attributes() const;
  inline ::D3::AttributeSerializer::SavedAttributes* mutable_saved_attributes();
  
  // optional .D3.Hero.SavedData saved_data = 4;
  inline bool has_saved_data() const;
  inline void clear_saved_data();
  static const int kSavedDataFieldNumber = 4;
  inline const ::D3::Hero::SavedData& saved_data() const;
  inline ::D3::Hero::SavedData* mutable_saved_data();
  
  // repeated .D3.Hero.SavedQuest saved_quest = 5;
  inline int saved_quest_size() const;
  inline void clear_saved_quest();
  static const int kSavedQuestFieldNumber = 5;
  inline const ::D3::Hero::SavedQuest& saved_quest(int index) const;
  inline ::D3::Hero::SavedQuest* mutable_saved_quest(int index);
  inline ::D3::Hero::SavedQuest* add_saved_quest();
  inline const ::google::protobuf::RepeatedPtrField< ::D3::Hero::SavedQuest >&
      saved_quest() const;
  inline ::google::protobuf::RepeatedPtrField< ::D3::Hero::SavedQuest >*
      mutable_saved_quest();
  
  // optional .D3.Items.ItemList items = 6;
  inline bool has_items() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 6;
  inline const ::D3::Items::ItemList& items() const;
  inline ::D3::Items::ItemList* mutable_items();
  
  // repeated .D3.Hero.QuestRewardHistoryEntry quest_reward_history = 7;
  inline int quest_reward_history_size() const;
  inline void clear_quest_reward_history();
  static const int kQuestRewardHistoryFieldNumber = 7;
  inline const ::D3::Hero::QuestRewardHistoryEntry& quest_reward_history(int index) const;
  inline ::D3::Hero::QuestRewardHistoryEntry* mutable_quest_reward_history(int index);
  inline ::D3::Hero::QuestRewardHistoryEntry* add_quest_reward_history();
  inline const ::google::protobuf::RepeatedPtrField< ::D3::Hero::QuestRewardHistoryEntry >&
      quest_reward_history() const;
  inline ::google::protobuf::RepeatedPtrField< ::D3::Hero::QuestRewardHistoryEntry >*
      mutable_quest_reward_history();
  
  // @@protoc_insertion_point(class_scope:D3.Hero.SavedDefinition)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 version_;
  ::D3::Hero::Digest* digest_;
  ::D3::AttributeSerializer::SavedAttributes* saved_attributes_;
  ::D3::Hero::SavedData* saved_data_;
  ::google::protobuf::RepeatedPtrField< ::D3::Hero::SavedQuest > saved_quest_;
  ::D3::Items::ItemList* items_;
  ::google::protobuf::RepeatedPtrField< ::D3::Hero::QuestRewardHistoryEntry > quest_reward_history_;
  friend void  protobuf_AddDesc_Hero_2eproto();
  friend void protobuf_AssignDesc_Hero_2eproto();
  friend void protobuf_ShutdownFile_Hero_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SavedDefinition* default_instance_;
};
// -------------------------------------------------------------------

class NameSequence : public ::google::protobuf::Message {
 public:
  NameSequence();
  virtual ~NameSequence();
  
  NameSequence(const NameSequence& from);
  
  inline NameSequence& operator=(const NameSequence& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const NameSequence& default_instance();
  
  void Swap(NameSequence* other);
  
  // implements Message ----------------------------------------------
  
  NameSequence* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NameSequence& from);
  void MergeFrom(const NameSequence& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 sequence = 1;
  inline bool has_sequence() const;
  inline void clear_sequence();
  static const int kSequenceFieldNumber = 1;
  inline ::google::protobuf::int64 sequence() const;
  inline void set_sequence(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:D3.Hero.NameSequence)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 sequence_;
  friend void  protobuf_AddDesc_Hero_2eproto();
  friend void protobuf_AssignDesc_Hero_2eproto();
  friend void protobuf_ShutdownFile_Hero_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static NameSequence* default_instance_;
};
// -------------------------------------------------------------------

class NameText : public ::google::protobuf::Message {
 public:
  NameText();
  virtual ~NameText();
  
  NameText(const NameText& from);
  
  inline NameText& operator=(const NameText& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const NameText& default_instance();
  
  void Swap(NameText* other);
  
  // implements Message ----------------------------------------------
  
  NameText* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NameText& from);
  void MergeFrom(const NameText& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // @@protoc_insertion_point(class_scope:D3.Hero.NameText)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* name_;
  static const ::std::string _default_name_;
  friend void  protobuf_AddDesc_Hero_2eproto();
  friend void protobuf_AssignDesc_Hero_2eproto();
  friend void protobuf_ShutdownFile_Hero_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static NameText* default_instance_;
};
// -------------------------------------------------------------------

class Escrow : public ::google::protobuf::Message {
 public:
  Escrow();
  virtual ~Escrow();
  
  Escrow(const Escrow& from);
  
  inline Escrow& operator=(const Escrow& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Escrow& default_instance();
  
  void Swap(Escrow* other);
  
  // implements Message ----------------------------------------------
  
  Escrow* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Escrow& from);
  void MergeFrom(const Escrow& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);
  
  // optional .D3.Items.Generator generator = 2;
  inline bool has_generator() const;
  inline void clear_generator();
  static const int kGeneratorFieldNumber = 2;
  inline const ::D3::Items::Generator& generator() const;
  inline ::D3::Items::Generator* mutable_generator();
  
  // optional .D3.Hero.SavedData hero_data = 3;
  inline bool has_hero_data() const;
  inline void clear_hero_data();
  static const int kHeroDataFieldNumber = 3;
  inline const ::D3::Hero::SavedData& hero_data() const;
  inline ::D3::Hero::SavedData* mutable_hero_data();
  
  // optional uint32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:D3.Hero.Escrow)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 version_;
  ::D3::Items::Generator* generator_;
  ::D3::Hero::SavedData* hero_data_;
  ::google::protobuf::uint32 state_;
  friend void  protobuf_AddDesc_Hero_2eproto();
  friend void protobuf_AssignDesc_Hero_2eproto();
  friend void protobuf_ShutdownFile_Hero_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Escrow* default_instance_;
};
// ===================================================================


// ===================================================================

// VisualItem

// optional sfixed32 gbid = 1;
inline bool VisualItem::has_gbid() const {
  return _has_bit(0);
}
inline void VisualItem::clear_gbid() {
  gbid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 VisualItem::gbid() const {
  return gbid_;
}
inline void VisualItem::set_gbid(::google::protobuf::int32 value) {
  _set_bit(0);
  gbid_ = value;
}

// optional sint32 dye_type = 2;
inline bool VisualItem::has_dye_type() const {
  return _has_bit(1);
}
inline void VisualItem::clear_dye_type() {
  dye_type_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 VisualItem::dye_type() const {
  return dye_type_;
}
inline void VisualItem::set_dye_type(::google::protobuf::int32 value) {
  _set_bit(1);
  dye_type_ = value;
}

// optional sint32 item_effect_type = 3;
inline bool VisualItem::has_item_effect_type() const {
  return _has_bit(2);
}
inline void VisualItem::clear_item_effect_type() {
  item_effect_type_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 VisualItem::item_effect_type() const {
  return item_effect_type_;
}
inline void VisualItem::set_item_effect_type(::google::protobuf::int32 value) {
  _set_bit(2);
  item_effect_type_ = value;
}

// optional sint32 effect_level = 4;
inline bool VisualItem::has_effect_level() const {
  return _has_bit(3);
}
inline void VisualItem::clear_effect_level() {
  effect_level_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 VisualItem::effect_level() const {
  return effect_level_;
}
inline void VisualItem::set_effect_level(::google::protobuf::int32 value) {
  _set_bit(3);
  effect_level_ = value;
}

// -------------------------------------------------------------------

// VisualEquipment

// repeated .D3.Hero.VisualItem visual_item = 1;
inline int VisualEquipment::visual_item_size() const {
  return visual_item_.size();
}
inline void VisualEquipment::clear_visual_item() {
  visual_item_.Clear();
}
inline const ::D3::Hero::VisualItem& VisualEquipment::visual_item(int index) const {
  return visual_item_.Get(index);
}
inline ::D3::Hero::VisualItem* VisualEquipment::mutable_visual_item(int index) {
  return visual_item_.Mutable(index);
}
inline ::D3::Hero::VisualItem* VisualEquipment::add_visual_item() {
  return visual_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::D3::Hero::VisualItem >&
VisualEquipment::visual_item() const {
  return visual_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::D3::Hero::VisualItem >*
VisualEquipment::mutable_visual_item() {
  return &visual_item_;
}

// -------------------------------------------------------------------

// QuestHistoryEntry

// required sfixed32 sno_quest = 1;
inline bool QuestHistoryEntry::has_sno_quest() const {
  return _has_bit(0);
}
inline void QuestHistoryEntry::clear_sno_quest() {
  sno_quest_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 QuestHistoryEntry::sno_quest() const {
  return sno_quest_;
}
inline void QuestHistoryEntry::set_sno_quest(::google::protobuf::int32 value) {
  _set_bit(0);
  sno_quest_ = value;
}

// required sint32 difficulty = 2;
inline bool QuestHistoryEntry::has_difficulty() const {
  return _has_bit(1);
}
inline void QuestHistoryEntry::clear_difficulty() {
  difficulty_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 QuestHistoryEntry::difficulty() const {
  return difficulty_;
}
inline void QuestHistoryEntry::set_difficulty(::google::protobuf::int32 value) {
  _set_bit(1);
  difficulty_ = value;
}

// -------------------------------------------------------------------

// QuestRewardHistoryEntry

// required sfixed32 sno_quest = 1;
inline bool QuestRewardHistoryEntry::has_sno_quest() const {
  return _has_bit(0);
}
inline void QuestRewardHistoryEntry::clear_sno_quest() {
  sno_quest_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 QuestRewardHistoryEntry::sno_quest() const {
  return sno_quest_;
}
inline void QuestRewardHistoryEntry::set_sno_quest(::google::protobuf::int32 value) {
  _set_bit(0);
  sno_quest_ = value;
}

// required sint32 step_uid = 2;
inline bool QuestRewardHistoryEntry::has_step_uid() const {
  return _has_bit(1);
}
inline void QuestRewardHistoryEntry::clear_step_uid() {
  step_uid_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 QuestRewardHistoryEntry::step_uid() const {
  return step_uid_;
}
inline void QuestRewardHistoryEntry::set_step_uid(::google::protobuf::int32 value) {
  _set_bit(1);
  step_uid_ = value;
}

// required sint32 difficulty = 3;
inline bool QuestRewardHistoryEntry::has_difficulty() const {
  return _has_bit(2);
}
inline void QuestRewardHistoryEntry::clear_difficulty() {
  difficulty_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 QuestRewardHistoryEntry::difficulty() const {
  return difficulty_;
}
inline void QuestRewardHistoryEntry::set_difficulty(::google::protobuf::int32 value) {
  _set_bit(2);
  difficulty_ = value;
}

// -------------------------------------------------------------------

// Digest

// required uint32 version = 1;
inline bool Digest::has_version() const {
  return _has_bit(0);
}
inline void Digest::clear_version() {
  version_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 Digest::version() const {
  return version_;
}
inline void Digest::set_version(::google::protobuf::uint32 value) {
  _set_bit(0);
  version_ = value;
}

// required .D3.OnlineService.EntityId hero_id = 2;
inline bool Digest::has_hero_id() const {
  return _has_bit(1);
}
inline void Digest::clear_hero_id() {
  if (hero_id_ != NULL) hero_id_->::D3::OnlineService::EntityId::Clear();
  _clear_bit(1);
}
inline const ::D3::OnlineService::EntityId& Digest::hero_id() const {
  return hero_id_ != NULL ? *hero_id_ : *default_instance_->hero_id_;
}
inline ::D3::OnlineService::EntityId* Digest::mutable_hero_id() {
  _set_bit(1);
  if (hero_id_ == NULL) hero_id_ = new ::D3::OnlineService::EntityId;
  return hero_id_;
}

// required string hero_name = 3;
inline bool Digest::has_hero_name() const {
  return _has_bit(2);
}
inline void Digest::clear_hero_name() {
  if (hero_name_ != &_default_hero_name_) {
    hero_name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& Digest::hero_name() const {
  return *hero_name_;
}
inline void Digest::set_hero_name(const ::std::string& value) {
  _set_bit(2);
  if (hero_name_ == &_default_hero_name_) {
    hero_name_ = new ::std::string;
  }
  hero_name_->assign(value);
}
inline void Digest::set_hero_name(const char* value) {
  _set_bit(2);
  if (hero_name_ == &_default_hero_name_) {
    hero_name_ = new ::std::string;
  }
  hero_name_->assign(value);
}
inline void Digest::set_hero_name(const char* value, size_t size) {
  _set_bit(2);
  if (hero_name_ == &_default_hero_name_) {
    hero_name_ = new ::std::string;
  }
  hero_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Digest::mutable_hero_name() {
  _set_bit(2);
  if (hero_name_ == &_default_hero_name_) {
    hero_name_ = new ::std::string;
  }
  return hero_name_;
}

// required sfixed32 gbid_class = 4;
inline bool Digest::has_gbid_class() const {
  return _has_bit(3);
}
inline void Digest::clear_gbid_class() {
  gbid_class_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 Digest::gbid_class() const {
  return gbid_class_;
}
inline void Digest::set_gbid_class(::google::protobuf::int32 value) {
  _set_bit(3);
  gbid_class_ = value;
}

// required sint32 level = 5;
inline bool Digest::has_level() const {
  return _has_bit(4);
}
inline void Digest::clear_level() {
  level_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 Digest::level() const {
  return level_;
}
inline void Digest::set_level(::google::protobuf::int32 value) {
  _set_bit(4);
  level_ = value;
}

// required uint32 player_flags = 6;
inline bool Digest::has_player_flags() const {
  return _has_bit(5);
}
inline void Digest::clear_player_flags() {
  player_flags_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 Digest::player_flags() const {
  return player_flags_;
}
inline void Digest::set_player_flags(::google::protobuf::uint32 value) {
  _set_bit(5);
  player_flags_ = value;
}

// required .D3.Hero.VisualEquipment visual_equipment = 7;
inline bool Digest::has_visual_equipment() const {
  return _has_bit(6);
}
inline void Digest::clear_visual_equipment() {
  if (visual_equipment_ != NULL) visual_equipment_->::D3::Hero::VisualEquipment::Clear();
  _clear_bit(6);
}
inline const ::D3::Hero::VisualEquipment& Digest::visual_equipment() const {
  return visual_equipment_ != NULL ? *visual_equipment_ : *default_instance_->visual_equipment_;
}
inline ::D3::Hero::VisualEquipment* Digest::mutable_visual_equipment() {
  _set_bit(6);
  if (visual_equipment_ == NULL) visual_equipment_ = new ::D3::Hero::VisualEquipment;
  return visual_equipment_;
}

// repeated .D3.Hero.QuestHistoryEntry quest_history = 8;
inline int Digest::quest_history_size() const {
  return quest_history_.size();
}
inline void Digest::clear_quest_history() {
  quest_history_.Clear();
}
inline const ::D3::Hero::QuestHistoryEntry& Digest::quest_history(int index) const {
  return quest_history_.Get(index);
}
inline ::D3::Hero::QuestHistoryEntry* Digest::mutable_quest_history(int index) {
  return quest_history_.Mutable(index);
}
inline ::D3::Hero::QuestHistoryEntry* Digest::add_quest_history() {
  return quest_history_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::D3::Hero::QuestHistoryEntry >&
Digest::quest_history() const {
  return quest_history_;
}
inline ::google::protobuf::RepeatedPtrField< ::D3::Hero::QuestHistoryEntry >*
Digest::mutable_quest_history() {
  return &quest_history_;
}

// required sint32 last_played_act = 10;
inline bool Digest::has_last_played_act() const {
  return _has_bit(8);
}
inline void Digest::clear_last_played_act() {
  last_played_act_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 Digest::last_played_act() const {
  return last_played_act_;
}
inline void Digest::set_last_played_act(::google::protobuf::int32 value) {
  _set_bit(8);
  last_played_act_ = value;
}

// required sint32 highest_unlocked_act = 11;
inline bool Digest::has_highest_unlocked_act() const {
  return _has_bit(9);
}
inline void Digest::clear_highest_unlocked_act() {
  highest_unlocked_act_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 Digest::highest_unlocked_act() const {
  return highest_unlocked_act_;
}
inline void Digest::set_highest_unlocked_act(::google::protobuf::int32 value) {
  _set_bit(9);
  highest_unlocked_act_ = value;
}

// required sint32 last_played_difficulty = 12;
inline bool Digest::has_last_played_difficulty() const {
  return _has_bit(10);
}
inline void Digest::clear_last_played_difficulty() {
  last_played_difficulty_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 Digest::last_played_difficulty() const {
  return last_played_difficulty_;
}
inline void Digest::set_last_played_difficulty(::google::protobuf::int32 value) {
  _set_bit(10);
  last_played_difficulty_ = value;
}

// required sint32 highest_unlocked_difficulty = 13;
inline bool Digest::has_highest_unlocked_difficulty() const {
  return _has_bit(11);
}
inline void Digest::clear_highest_unlocked_difficulty() {
  highest_unlocked_difficulty_ = 0;
  _clear_bit(11);
}
inline ::google::protobuf::int32 Digest::highest_unlocked_difficulty() const {
  return highest_unlocked_difficulty_;
}
inline void Digest::set_highest_unlocked_difficulty(::google::protobuf::int32 value) {
  _set_bit(11);
  highest_unlocked_difficulty_ = value;
}

// required sfixed32 last_played_quest = 14;
inline bool Digest::has_last_played_quest() const {
  return _has_bit(12);
}
inline void Digest::clear_last_played_quest() {
  last_played_quest_ = 0;
  _clear_bit(12);
}
inline ::google::protobuf::int32 Digest::last_played_quest() const {
  return last_played_quest_;
}
inline void Digest::set_last_played_quest(::google::protobuf::int32 value) {
  _set_bit(12);
  last_played_quest_ = value;
}

// required sint32 last_played_quest_step = 15;
inline bool Digest::has_last_played_quest_step() const {
  return _has_bit(13);
}
inline void Digest::clear_last_played_quest_step() {
  last_played_quest_step_ = 0;
  _clear_bit(13);
}
inline ::google::protobuf::int32 Digest::last_played_quest_step() const {
  return last_played_quest_step_;
}
inline void Digest::set_last_played_quest_step(::google::protobuf::int32 value) {
  _set_bit(13);
  last_played_quest_step_ = value;
}

// required uint32 time_played = 16;
inline bool Digest::has_time_played() const {
  return _has_bit(14);
}
inline void Digest::clear_time_played() {
  time_played_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 Digest::time_played() const {
  return time_played_;
}
inline void Digest::set_time_played(::google::protobuf::uint32 value) {
  _set_bit(14);
  time_played_ = value;
}

// -------------------------------------------------------------------

// HotbarButtonData

// required sfixed32 sno_power = 1;
inline bool HotbarButtonData::has_sno_power() const {
  return _has_bit(0);
}
inline void HotbarButtonData::clear_sno_power() {
  sno_power_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 HotbarButtonData::sno_power() const {
  return sno_power_;
}
inline void HotbarButtonData::set_sno_power(::google::protobuf::int32 value) {
  _set_bit(0);
  sno_power_ = value;
}

// required sfixed32 gbid_item = 2;
inline bool HotbarButtonData::has_gbid_item() const {
  return _has_bit(1);
}
inline void HotbarButtonData::clear_gbid_item() {
  gbid_item_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 HotbarButtonData::gbid_item() const {
  return gbid_item_;
}
inline void HotbarButtonData::set_gbid_item(::google::protobuf::int32 value) {
  _set_bit(1);
  gbid_item_ = value;
}

// -------------------------------------------------------------------

// SkillKeyMapping

// required sfixed32 sno_power = 1;
inline bool SkillKeyMapping::has_sno_power() const {
  return _has_bit(0);
}
inline void SkillKeyMapping::clear_sno_power() {
  sno_power_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SkillKeyMapping::sno_power() const {
  return sno_power_;
}
inline void SkillKeyMapping::set_sno_power(::google::protobuf::int32 value) {
  _set_bit(0);
  sno_power_ = value;
}

// required sint32 id_hotkey = 2;
inline bool SkillKeyMapping::has_id_hotkey() const {
  return _has_bit(1);
}
inline void SkillKeyMapping::clear_id_hotkey() {
  id_hotkey_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 SkillKeyMapping::id_hotkey() const {
  return id_hotkey_;
}
inline void SkillKeyMapping::set_id_hotkey(::google::protobuf::int32 value) {
  _set_bit(1);
  id_hotkey_ = value;
}

// required sint32 skill_button = 3;
inline bool SkillKeyMapping::has_skill_button() const {
  return _has_bit(2);
}
inline void SkillKeyMapping::clear_skill_button() {
  skill_button_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 SkillKeyMapping::skill_button() const {
  return skill_button_;
}
inline void SkillKeyMapping::set_skill_button(::google::protobuf::int32 value) {
  _set_bit(2);
  skill_button_ = value;
}

// -------------------------------------------------------------------

// SavedQuest

// required sfixed32 sno_quest = 1;
inline bool SavedQuest::has_sno_quest() const {
  return _has_bit(0);
}
inline void SavedQuest::clear_sno_quest() {
  sno_quest_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SavedQuest::sno_quest() const {
  return sno_quest_;
}
inline void SavedQuest::set_sno_quest(::google::protobuf::int32 value) {
  _set_bit(0);
  sno_quest_ = value;
}

// required sint32 difficulty = 2;
inline bool SavedQuest::has_difficulty() const {
  return _has_bit(1);
}
inline void SavedQuest::clear_difficulty() {
  difficulty_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 SavedQuest::difficulty() const {
  return difficulty_;
}
inline void SavedQuest::set_difficulty(::google::protobuf::int32 value) {
  _set_bit(1);
  difficulty_ = value;
}

// required sint32 current_step_uid = 3;
inline bool SavedQuest::has_current_step_uid() const {
  return _has_bit(2);
}
inline void SavedQuest::clear_current_step_uid() {
  current_step_uid_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 SavedQuest::current_step_uid() const {
  return current_step_uid_;
}
inline void SavedQuest::set_current_step_uid(::google::protobuf::int32 value) {
  _set_bit(2);
  current_step_uid_ = value;
}

// repeated sint32 objective_state = 4;
inline int SavedQuest::objective_state_size() const {
  return objective_state_.size();
}
inline void SavedQuest::clear_objective_state() {
  objective_state_.Clear();
}
inline ::google::protobuf::int32 SavedQuest::objective_state(int index) const {
  return objective_state_.Get(index);
}
inline void SavedQuest::set_objective_state(int index, ::google::protobuf::int32 value) {
  objective_state_.Set(index, value);
}
inline void SavedQuest::add_objective_state(::google::protobuf::int32 value) {
  objective_state_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SavedQuest::objective_state() const {
  return objective_state_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SavedQuest::mutable_objective_state() {
  return &objective_state_;
}

// repeated sint32 failure_condition_state = 5;
inline int SavedQuest::failure_condition_state_size() const {
  return failure_condition_state_.size();
}
inline void SavedQuest::clear_failure_condition_state() {
  failure_condition_state_.Clear();
}
inline ::google::protobuf::int32 SavedQuest::failure_condition_state(int index) const {
  return failure_condition_state_.Get(index);
}
inline void SavedQuest::set_failure_condition_state(int index, ::google::protobuf::int32 value) {
  failure_condition_state_.Set(index, value);
}
inline void SavedQuest::add_failure_condition_state(::google::protobuf::int32 value) {
  failure_condition_state_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SavedQuest::failure_condition_state() const {
  return failure_condition_state_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SavedQuest::mutable_failure_condition_state() {
  return &failure_condition_state_;
}

// -------------------------------------------------------------------

// LearnedLore

// repeated sfixed32 sno_lore_learned = 1;
inline int LearnedLore::sno_lore_learned_size() const {
  return sno_lore_learned_.size();
}
inline void LearnedLore::clear_sno_lore_learned() {
  sno_lore_learned_.Clear();
}
inline ::google::protobuf::int32 LearnedLore::sno_lore_learned(int index) const {
  return sno_lore_learned_.Get(index);
}
inline void LearnedLore::set_sno_lore_learned(int index, ::google::protobuf::int32 value) {
  sno_lore_learned_.Set(index, value);
}
inline void LearnedLore::add_sno_lore_learned(::google::protobuf::int32 value) {
  sno_lore_learned_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LearnedLore::sno_lore_learned() const {
  return sno_lore_learned_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LearnedLore::mutable_sno_lore_learned() {
  return &sno_lore_learned_;
}

// -------------------------------------------------------------------

// SavedConversations

// required bytes played_conversations_bitfield = 1;
inline bool SavedConversations::has_played_conversations_bitfield() const {
  return _has_bit(0);
}
inline void SavedConversations::clear_played_conversations_bitfield() {
  if (played_conversations_bitfield_ != &_default_played_conversations_bitfield_) {
    played_conversations_bitfield_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& SavedConversations::played_conversations_bitfield() const {
  return *played_conversations_bitfield_;
}
inline void SavedConversations::set_played_conversations_bitfield(const ::std::string& value) {
  _set_bit(0);
  if (played_conversations_bitfield_ == &_default_played_conversations_bitfield_) {
    played_conversations_bitfield_ = new ::std::string;
  }
  played_conversations_bitfield_->assign(value);
}
inline void SavedConversations::set_played_conversations_bitfield(const char* value) {
  _set_bit(0);
  if (played_conversations_bitfield_ == &_default_played_conversations_bitfield_) {
    played_conversations_bitfield_ = new ::std::string;
  }
  played_conversations_bitfield_->assign(value);
}
inline void SavedConversations::set_played_conversations_bitfield(const void* value, size_t size) {
  _set_bit(0);
  if (played_conversations_bitfield_ == &_default_played_conversations_bitfield_) {
    played_conversations_bitfield_ = new ::std::string;
  }
  played_conversations_bitfield_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SavedConversations::mutable_played_conversations_bitfield() {
  _set_bit(0);
  if (played_conversations_bitfield_ == &_default_played_conversations_bitfield_) {
    played_conversations_bitfield_ = new ::std::string;
  }
  return played_conversations_bitfield_;
}

// repeated sfixed32 sno_saved_conversations = 2;
inline int SavedConversations::sno_saved_conversations_size() const {
  return sno_saved_conversations_.size();
}
inline void SavedConversations::clear_sno_saved_conversations() {
  sno_saved_conversations_.Clear();
}
inline ::google::protobuf::int32 SavedConversations::sno_saved_conversations(int index) const {
  return sno_saved_conversations_.Get(index);
}
inline void SavedConversations::set_sno_saved_conversations(int index, ::google::protobuf::int32 value) {
  sno_saved_conversations_.Set(index, value);
}
inline void SavedConversations::add_sno_saved_conversations(::google::protobuf::int32 value) {
  sno_saved_conversations_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SavedConversations::sno_saved_conversations() const {
  return sno_saved_conversations_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SavedConversations::mutable_sno_saved_conversations() {
  return &sno_saved_conversations_;
}

// -------------------------------------------------------------------

// SavePointData_Proto

// required sfixed32 sno_world = 1;
inline bool SavePointData_Proto::has_sno_world() const {
  return _has_bit(0);
}
inline void SavePointData_Proto::clear_sno_world() {
  sno_world_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 SavePointData_Proto::sno_world() const {
  return sno_world_;
}
inline void SavePointData_Proto::set_sno_world(::google::protobuf::int32 value) {
  _set_bit(0);
  sno_world_ = value;
}

// required sint32 savepoint_number = 2;
inline bool SavePointData_Proto::has_savepoint_number() const {
  return _has_bit(1);
}
inline void SavePointData_Proto::clear_savepoint_number() {
  savepoint_number_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 SavePointData_Proto::savepoint_number() const {
  return savepoint_number_;
}
inline void SavePointData_Proto::set_savepoint_number(::google::protobuf::int32 value) {
  _set_bit(1);
  savepoint_number_ = value;
}

// required uint32 creates_portal = 3;
inline bool SavePointData_Proto::has_creates_portal() const {
  return _has_bit(2);
}
inline void SavePointData_Proto::clear_creates_portal() {
  creates_portal_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 SavePointData_Proto::creates_portal() const {
  return creates_portal_;
}
inline void SavePointData_Proto::set_creates_portal(::google::protobuf::uint32 value) {
  _set_bit(2);
  creates_portal_ = value;
}

// -------------------------------------------------------------------

// SavedData

// repeated .D3.Hero.HotbarButtonData hotbar_button_assignments = 1;
inline int SavedData::hotbar_button_assignments_size() const {
  return hotbar_button_assignments_.size();
}
inline void SavedData::clear_hotbar_button_assignments() {
  hotbar_button_assignments_.Clear();
}
inline const ::D3::Hero::HotbarButtonData& SavedData::hotbar_button_assignments(int index) const {
  return hotbar_button_assignments_.Get(index);
}
inline ::D3::Hero::HotbarButtonData* SavedData::mutable_hotbar_button_assignments(int index) {
  return hotbar_button_assignments_.Mutable(index);
}
inline ::D3::Hero::HotbarButtonData* SavedData::add_hotbar_button_assignments() {
  return hotbar_button_assignments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::D3::Hero::HotbarButtonData >&
SavedData::hotbar_button_assignments() const {
  return hotbar_button_assignments_;
}
inline ::google::protobuf::RepeatedPtrField< ::D3::Hero::HotbarButtonData >*
SavedData::mutable_hotbar_button_assignments() {
  return &hotbar_button_assignments_;
}

// repeated .D3.Hero.SkillKeyMapping skill_key_map = 2;
inline int SavedData::skill_key_map_size() const {
  return skill_key_map_.size();
}
inline void SavedData::clear_skill_key_map() {
  skill_key_map_.Clear();
}
inline const ::D3::Hero::SkillKeyMapping& SavedData::skill_key_map(int index) const {
  return skill_key_map_.Get(index);
}
inline ::D3::Hero::SkillKeyMapping* SavedData::mutable_skill_key_map(int index) {
  return skill_key_map_.Mutable(index);
}
inline ::D3::Hero::SkillKeyMapping* SavedData::add_skill_key_map() {
  return skill_key_map_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::D3::Hero::SkillKeyMapping >&
SavedData::skill_key_map() const {
  return skill_key_map_;
}
inline ::google::protobuf::RepeatedPtrField< ::D3::Hero::SkillKeyMapping >*
SavedData::mutable_skill_key_map() {
  return &skill_key_map_;
}

// required uint32 time_played = 3;
inline bool SavedData::has_time_played() const {
  return _has_bit(2);
}
inline void SavedData::clear_time_played() {
  time_played_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 SavedData::time_played() const {
  return time_played_;
}
inline void SavedData::set_time_played(::google::protobuf::uint32 value) {
  _set_bit(2);
  time_played_ = value;
}

// required uint32 activated_waypoints = 4;
inline bool SavedData::has_activated_waypoints() const {
  return _has_bit(3);
}
inline void SavedData::clear_activated_waypoints() {
  activated_waypoints_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 SavedData::activated_waypoints() const {
  return activated_waypoints_;
}
inline void SavedData::set_activated_waypoints(::google::protobuf::uint32 value) {
  _set_bit(3);
  activated_waypoints_ = value;
}

// required .D3.Hireling.SavedData hireling_saved_data = 5;
inline bool SavedData::has_hireling_saved_data() const {
  return _has_bit(4);
}
inline void SavedData::clear_hireling_saved_data() {
  if (hireling_saved_data_ != NULL) hireling_saved_data_->::D3::Hireling::SavedData::Clear();
  _clear_bit(4);
}
inline const ::D3::Hireling::SavedData& SavedData::hireling_saved_data() const {
  return hireling_saved_data_ != NULL ? *hireling_saved_data_ : *default_instance_->hireling_saved_data_;
}
inline ::D3::Hireling::SavedData* SavedData::mutable_hireling_saved_data() {
  _set_bit(4);
  if (hireling_saved_data_ == NULL) hireling_saved_data_ = new ::D3::Hireling::SavedData;
  return hireling_saved_data_;
}

// required uint32 last_level_time = 6;
inline bool SavedData::has_last_level_time() const {
  return _has_bit(5);
}
inline void SavedData::clear_last_level_time() {
  last_level_time_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 SavedData::last_level_time() const {
  return last_level_time_;
}
inline void SavedData::set_last_level_time(::google::protobuf::uint32 value) {
  _set_bit(5);
  last_level_time_ = value;
}

// required .D3.Hero.LearnedLore learned_lore = 7;
inline bool SavedData::has_learned_lore() const {
  return _has_bit(6);
}
inline void SavedData::clear_learned_lore() {
  if (learned_lore_ != NULL) learned_lore_->::D3::Hero::LearnedLore::Clear();
  _clear_bit(6);
}
inline const ::D3::Hero::LearnedLore& SavedData::learned_lore() const {
  return learned_lore_ != NULL ? *learned_lore_ : *default_instance_->learned_lore_;
}
inline ::D3::Hero::LearnedLore* SavedData::mutable_learned_lore() {
  _set_bit(6);
  if (learned_lore_ == NULL) learned_lore_ = new ::D3::Hero::LearnedLore;
  return learned_lore_;
}

// required .D3.Hero.SavedConversations saved_conversations = 8;
inline bool SavedData::has_saved_conversations() const {
  return _has_bit(7);
}
inline void SavedData::clear_saved_conversations() {
  if (saved_conversations_ != NULL) saved_conversations_->::D3::Hero::SavedConversations::Clear();
  _clear_bit(7);
}
inline const ::D3::Hero::SavedConversations& SavedData::saved_conversations() const {
  return saved_conversations_ != NULL ? *saved_conversations_ : *default_instance_->saved_conversations_;
}
inline ::D3::Hero::SavedConversations* SavedData::mutable_saved_conversations() {
  _set_bit(7);
  if (saved_conversations_ == NULL) saved_conversations_ = new ::D3::Hero::SavedConversations;
  return saved_conversations_;
}

// repeated sfixed32 sno_active_skills = 9;
inline int SavedData::sno_active_skills_size() const {
  return sno_active_skills_.size();
}
inline void SavedData::clear_sno_active_skills() {
  sno_active_skills_.Clear();
}
inline ::google::protobuf::int32 SavedData::sno_active_skills(int index) const {
  return sno_active_skills_.Get(index);
}
inline void SavedData::set_sno_active_skills(int index, ::google::protobuf::int32 value) {
  sno_active_skills_.Set(index, value);
}
inline void SavedData::add_sno_active_skills(::google::protobuf::int32 value) {
  sno_active_skills_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SavedData::sno_active_skills() const {
  return sno_active_skills_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SavedData::mutable_sno_active_skills() {
  return &sno_active_skills_;
}

// repeated sfixed32 sno_traits = 10;
inline int SavedData::sno_traits_size() const {
  return sno_traits_.size();
}
inline void SavedData::clear_sno_traits() {
  sno_traits_.Clear();
}
inline ::google::protobuf::int32 SavedData::sno_traits(int index) const {
  return sno_traits_.Get(index);
}
inline void SavedData::set_sno_traits(int index, ::google::protobuf::int32 value) {
  sno_traits_.Set(index, value);
}
inline void SavedData::add_sno_traits(::google::protobuf::int32 value) {
  sno_traits_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SavedData::sno_traits() const {
  return sno_traits_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SavedData::mutable_sno_traits() {
  return &sno_traits_;
}

// repeated sfixed32 seen_tutorials = 11;
inline int SavedData::seen_tutorials_size() const {
  return seen_tutorials_.size();
}
inline void SavedData::clear_seen_tutorials() {
  seen_tutorials_.Clear();
}
inline ::google::protobuf::int32 SavedData::seen_tutorials(int index) const {
  return seen_tutorials_.Get(index);
}
inline void SavedData::set_seen_tutorials(int index, ::google::protobuf::int32 value) {
  seen_tutorials_.Set(index, value);
}
inline void SavedData::add_seen_tutorials(::google::protobuf::int32 value) {
  seen_tutorials_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SavedData::seen_tutorials() const {
  return seen_tutorials_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SavedData::mutable_seen_tutorials() {
  return &seen_tutorials_;
}

// required .D3.Hero.SavePointData_Proto save_point = 12;
inline bool SavedData::has_save_point() const {
  return _has_bit(11);
}
inline void SavedData::clear_save_point() {
  if (save_point_ != NULL) save_point_->::D3::Hero::SavePointData_Proto::Clear();
  _clear_bit(11);
}
inline const ::D3::Hero::SavePointData_Proto& SavedData::save_point() const {
  return save_point_ != NULL ? *save_point_ : *default_instance_->save_point_;
}
inline ::D3::Hero::SavePointData_Proto* SavedData::mutable_save_point() {
  _set_bit(11);
  if (save_point_ == NULL) save_point_ = new ::D3::Hero::SavePointData_Proto;
  return save_point_;
}

// -------------------------------------------------------------------

// Timestamps

// required sint64 create_time = 1;
inline bool Timestamps::has_create_time() const {
  return _has_bit(0);
}
inline void Timestamps::clear_create_time() {
  create_time_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 Timestamps::create_time() const {
  return create_time_;
}
inline void Timestamps::set_create_time(::google::protobuf::int64 value) {
  _set_bit(0);
  create_time_ = value;
}

// optional sint64 delete_time = 2;
inline bool Timestamps::has_delete_time() const {
  return _has_bit(1);
}
inline void Timestamps::clear_delete_time() {
  delete_time_ = GOOGLE_LONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::int64 Timestamps::delete_time() const {
  return delete_time_;
}
inline void Timestamps::set_delete_time(::google::protobuf::int64 value) {
  _set_bit(1);
  delete_time_ = value;
}

// -------------------------------------------------------------------

// SavedDefinition

// required uint32 version = 1;
inline bool SavedDefinition::has_version() const {
  return _has_bit(0);
}
inline void SavedDefinition::clear_version() {
  version_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 SavedDefinition::version() const {
  return version_;
}
inline void SavedDefinition::set_version(::google::protobuf::uint32 value) {
  _set_bit(0);
  version_ = value;
}

// optional .D3.Hero.Digest digest = 2;
inline bool SavedDefinition::has_digest() const {
  return _has_bit(1);
}
inline void SavedDefinition::clear_digest() {
  if (digest_ != NULL) digest_->::D3::Hero::Digest::Clear();
  _clear_bit(1);
}
inline const ::D3::Hero::Digest& SavedDefinition::digest() const {
  return digest_ != NULL ? *digest_ : *default_instance_->digest_;
}
inline ::D3::Hero::Digest* SavedDefinition::mutable_digest() {
  _set_bit(1);
  if (digest_ == NULL) digest_ = new ::D3::Hero::Digest;
  return digest_;
}

// required .D3.AttributeSerializer.SavedAttributes saved_attributes = 3;
inline bool SavedDefinition::has_saved_attributes() const {
  return _has_bit(2);
}
inline void SavedDefinition::clear_saved_attributes() {
  if (saved_attributes_ != NULL) saved_attributes_->::D3::AttributeSerializer::SavedAttributes::Clear();
  _clear_bit(2);
}
inline const ::D3::AttributeSerializer::SavedAttributes& SavedDefinition::saved_attributes() const {
  return saved_attributes_ != NULL ? *saved_attributes_ : *default_instance_->saved_attributes_;
}
inline ::D3::AttributeSerializer::SavedAttributes* SavedDefinition::mutable_saved_attributes() {
  _set_bit(2);
  if (saved_attributes_ == NULL) saved_attributes_ = new ::D3::AttributeSerializer::SavedAttributes;
  return saved_attributes_;
}

// optional .D3.Hero.SavedData saved_data = 4;
inline bool SavedDefinition::has_saved_data() const {
  return _has_bit(3);
}
inline void SavedDefinition::clear_saved_data() {
  if (saved_data_ != NULL) saved_data_->::D3::Hero::SavedData::Clear();
  _clear_bit(3);
}
inline const ::D3::Hero::SavedData& SavedDefinition::saved_data() const {
  return saved_data_ != NULL ? *saved_data_ : *default_instance_->saved_data_;
}
inline ::D3::Hero::SavedData* SavedDefinition::mutable_saved_data() {
  _set_bit(3);
  if (saved_data_ == NULL) saved_data_ = new ::D3::Hero::SavedData;
  return saved_data_;
}

// repeated .D3.Hero.SavedQuest saved_quest = 5;
inline int SavedDefinition::saved_quest_size() const {
  return saved_quest_.size();
}
inline void SavedDefinition::clear_saved_quest() {
  saved_quest_.Clear();
}
inline const ::D3::Hero::SavedQuest& SavedDefinition::saved_quest(int index) const {
  return saved_quest_.Get(index);
}
inline ::D3::Hero::SavedQuest* SavedDefinition::mutable_saved_quest(int index) {
  return saved_quest_.Mutable(index);
}
inline ::D3::Hero::SavedQuest* SavedDefinition::add_saved_quest() {
  return saved_quest_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::D3::Hero::SavedQuest >&
SavedDefinition::saved_quest() const {
  return saved_quest_;
}
inline ::google::protobuf::RepeatedPtrField< ::D3::Hero::SavedQuest >*
SavedDefinition::mutable_saved_quest() {
  return &saved_quest_;
}

// optional .D3.Items.ItemList items = 6;
inline bool SavedDefinition::has_items() const {
  return _has_bit(5);
}
inline void SavedDefinition::clear_items() {
  if (items_ != NULL) items_->::D3::Items::ItemList::Clear();
  _clear_bit(5);
}
inline const ::D3::Items::ItemList& SavedDefinition::items() const {
  return items_ != NULL ? *items_ : *default_instance_->items_;
}
inline ::D3::Items::ItemList* SavedDefinition::mutable_items() {
  _set_bit(5);
  if (items_ == NULL) items_ = new ::D3::Items::ItemList;
  return items_;
}

// repeated .D3.Hero.QuestRewardHistoryEntry quest_reward_history = 7;
inline int SavedDefinition::quest_reward_history_size() const {
  return quest_reward_history_.size();
}
inline void SavedDefinition::clear_quest_reward_history() {
  quest_reward_history_.Clear();
}
inline const ::D3::Hero::QuestRewardHistoryEntry& SavedDefinition::quest_reward_history(int index) const {
  return quest_reward_history_.Get(index);
}
inline ::D3::Hero::QuestRewardHistoryEntry* SavedDefinition::mutable_quest_reward_history(int index) {
  return quest_reward_history_.Mutable(index);
}
inline ::D3::Hero::QuestRewardHistoryEntry* SavedDefinition::add_quest_reward_history() {
  return quest_reward_history_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::D3::Hero::QuestRewardHistoryEntry >&
SavedDefinition::quest_reward_history() const {
  return quest_reward_history_;
}
inline ::google::protobuf::RepeatedPtrField< ::D3::Hero::QuestRewardHistoryEntry >*
SavedDefinition::mutable_quest_reward_history() {
  return &quest_reward_history_;
}

// -------------------------------------------------------------------

// NameSequence

// optional int64 sequence = 1;
inline bool NameSequence::has_sequence() const {
  return _has_bit(0);
}
inline void NameSequence::clear_sequence() {
  sequence_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 NameSequence::sequence() const {
  return sequence_;
}
inline void NameSequence::set_sequence(::google::protobuf::int64 value) {
  _set_bit(0);
  sequence_ = value;
}

// -------------------------------------------------------------------

// NameText

// required string name = 1;
inline bool NameText::has_name() const {
  return _has_bit(0);
}
inline void NameText::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& NameText::name() const {
  return *name_;
}
inline void NameText::set_name(const ::std::string& value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void NameText::set_name(const char* value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void NameText::set_name(const char* value, size_t size) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NameText::mutable_name() {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// -------------------------------------------------------------------

// Escrow

// required uint32 version = 1;
inline bool Escrow::has_version() const {
  return _has_bit(0);
}
inline void Escrow::clear_version() {
  version_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 Escrow::version() const {
  return version_;
}
inline void Escrow::set_version(::google::protobuf::uint32 value) {
  _set_bit(0);
  version_ = value;
}

// optional .D3.Items.Generator generator = 2;
inline bool Escrow::has_generator() const {
  return _has_bit(1);
}
inline void Escrow::clear_generator() {
  if (generator_ != NULL) generator_->::D3::Items::Generator::Clear();
  _clear_bit(1);
}
inline const ::D3::Items::Generator& Escrow::generator() const {
  return generator_ != NULL ? *generator_ : *default_instance_->generator_;
}
inline ::D3::Items::Generator* Escrow::mutable_generator() {
  _set_bit(1);
  if (generator_ == NULL) generator_ = new ::D3::Items::Generator;
  return generator_;
}

// optional .D3.Hero.SavedData hero_data = 3;
inline bool Escrow::has_hero_data() const {
  return _has_bit(2);
}
inline void Escrow::clear_hero_data() {
  if (hero_data_ != NULL) hero_data_->::D3::Hero::SavedData::Clear();
  _clear_bit(2);
}
inline const ::D3::Hero::SavedData& Escrow::hero_data() const {
  return hero_data_ != NULL ? *hero_data_ : *default_instance_->hero_data_;
}
inline ::D3::Hero::SavedData* Escrow::mutable_hero_data() {
  _set_bit(2);
  if (hero_data_ == NULL) hero_data_ = new ::D3::Hero::SavedData;
  return hero_data_;
}

// optional uint32 state = 4;
inline bool Escrow::has_state() const {
  return _has_bit(3);
}
inline void Escrow::clear_state() {
  state_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 Escrow::state() const {
  return state_;
}
inline void Escrow::set_state(::google::protobuf::uint32 value) {
  _set_bit(3);
  state_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Hero
}  // namespace D3

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Hero_2eproto__INCLUDED

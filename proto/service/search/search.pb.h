// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/search/search.proto

#ifndef PROTOBUF_service_2fsearch_2fsearch_2eproto__INCLUDED
#define PROTOBUF_service_2fsearch_2fsearch_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/service.h>
#include "lib/rpc/rpc.pb.h"
#include "service/search/search_types.pb.h"
// @@protoc_insertion_point(includes)

namespace bnet {
namespace protocol {
namespace search {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_service_2fsearch_2fsearch_2eproto();
void protobuf_AssignDesc_service_2fsearch_2fsearch_2eproto();
void protobuf_ShutdownFile_service_2fsearch_2fsearch_2eproto();

class FindMatchesRequest;
class FindMatchesResponse;
class SetObjectRequest;
class RemoveObjectsRequest;
class SearchConfig;

// ===================================================================

class FindMatchesRequest : public ::google::protobuf::Message {
 public:
  FindMatchesRequest();
  virtual ~FindMatchesRequest();
  
  FindMatchesRequest(const FindMatchesRequest& from);
  
  inline FindMatchesRequest& operator=(const FindMatchesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FindMatchesRequest& default_instance();
  
  void Swap(FindMatchesRequest* other);
  
  // implements Message ----------------------------------------------
  
  FindMatchesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindMatchesRequest& from);
  void MergeFrom(const FindMatchesRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string universe = 1;
  inline bool has_universe() const;
  inline void clear_universe();
  static const int kUniverseFieldNumber = 1;
  inline const ::std::string& universe() const;
  inline void set_universe(const ::std::string& value);
  inline void set_universe(const char* value);
  inline void set_universe(const char* value, size_t size);
  inline ::std::string* mutable_universe();
  
  // repeated .bnet.protocol.search.Filter filters = 2;
  inline int filters_size() const;
  inline void clear_filters();
  static const int kFiltersFieldNumber = 2;
  inline const ::bnet::protocol::search::Filter& filters(int index) const;
  inline ::bnet::protocol::search::Filter* mutable_filters(int index);
  inline ::bnet::protocol::search::Filter* add_filters();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::search::Filter >&
      filters() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::search::Filter >*
      mutable_filters();
  
  // optional uint32 starting_index = 3 [default = 0];
  inline bool has_starting_index() const;
  inline void clear_starting_index();
  static const int kStartingIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 starting_index() const;
  inline void set_starting_index(::google::protobuf::uint32 value);
  
  // optional uint32 count = 4 [default = 0];
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 4;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.search.FindMatchesRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* universe_;
  static const ::std::string _default_universe_;
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::search::Filter > filters_;
  ::google::protobuf::uint32 starting_index_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_service_2fsearch_2fsearch_2eproto();
  friend void protobuf_AssignDesc_service_2fsearch_2fsearch_2eproto();
  friend void protobuf_ShutdownFile_service_2fsearch_2fsearch_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static FindMatchesRequest* default_instance_;
};
// -------------------------------------------------------------------

class FindMatchesResponse : public ::google::protobuf::Message {
 public:
  FindMatchesResponse();
  virtual ~FindMatchesResponse();
  
  FindMatchesResponse(const FindMatchesResponse& from);
  
  inline FindMatchesResponse& operator=(const FindMatchesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FindMatchesResponse& default_instance();
  
  void Swap(FindMatchesResponse* other);
  
  // implements Message ----------------------------------------------
  
  FindMatchesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindMatchesResponse& from);
  void MergeFrom(const FindMatchesResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 total_count = 1;
  inline bool has_total_count() const;
  inline void clear_total_count();
  static const int kTotalCountFieldNumber = 1;
  inline ::google::protobuf::uint32 total_count() const;
  inline void set_total_count(::google::protobuf::uint32 value);
  
  // repeated .bnet.protocol.search.Object objects = 2;
  inline int objects_size() const;
  inline void clear_objects();
  static const int kObjectsFieldNumber = 2;
  inline const ::bnet::protocol::search::Object& objects(int index) const;
  inline ::bnet::protocol::search::Object* mutable_objects(int index);
  inline ::bnet::protocol::search::Object* add_objects();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::search::Object >&
      objects() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::search::Object >*
      mutable_objects();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.search.FindMatchesResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 total_count_;
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::search::Object > objects_;
  friend void  protobuf_AddDesc_service_2fsearch_2fsearch_2eproto();
  friend void protobuf_AssignDesc_service_2fsearch_2fsearch_2eproto();
  friend void protobuf_ShutdownFile_service_2fsearch_2fsearch_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static FindMatchesResponse* default_instance_;
};
// -------------------------------------------------------------------

class SetObjectRequest : public ::google::protobuf::Message {
 public:
  SetObjectRequest();
  virtual ~SetObjectRequest();
  
  SetObjectRequest(const SetObjectRequest& from);
  
  inline SetObjectRequest& operator=(const SetObjectRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetObjectRequest& default_instance();
  
  void Swap(SetObjectRequest* other);
  
  // implements Message ----------------------------------------------
  
  SetObjectRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetObjectRequest& from);
  void MergeFrom(const SetObjectRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.search.Object objects = 1;
  inline int objects_size() const;
  inline void clear_objects();
  static const int kObjectsFieldNumber = 1;
  inline const ::bnet::protocol::search::Object& objects(int index) const;
  inline ::bnet::protocol::search::Object* mutable_objects(int index);
  inline ::bnet::protocol::search::Object* add_objects();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::search::Object >&
      objects() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::search::Object >*
      mutable_objects();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.search.SetObjectRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::search::Object > objects_;
  friend void  protobuf_AddDesc_service_2fsearch_2fsearch_2eproto();
  friend void protobuf_AssignDesc_service_2fsearch_2fsearch_2eproto();
  friend void protobuf_ShutdownFile_service_2fsearch_2fsearch_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SetObjectRequest* default_instance_;
};
// -------------------------------------------------------------------

class RemoveObjectsRequest : public ::google::protobuf::Message {
 public:
  RemoveObjectsRequest();
  virtual ~RemoveObjectsRequest();
  
  RemoveObjectsRequest(const RemoveObjectsRequest& from);
  
  inline RemoveObjectsRequest& operator=(const RemoveObjectsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveObjectsRequest& default_instance();
  
  void Swap(RemoveObjectsRequest* other);
  
  // implements Message ----------------------------------------------
  
  RemoveObjectsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveObjectsRequest& from);
  void MergeFrom(const RemoveObjectsRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes start_id = 1;
  inline bool has_start_id() const;
  inline void clear_start_id();
  static const int kStartIdFieldNumber = 1;
  inline const ::std::string& start_id() const;
  inline void set_start_id(const ::std::string& value);
  inline void set_start_id(const char* value);
  inline void set_start_id(const void* value, size_t size);
  inline ::std::string* mutable_start_id();
  
  // required bytes end_id = 2;
  inline bool has_end_id() const;
  inline void clear_end_id();
  static const int kEndIdFieldNumber = 2;
  inline const ::std::string& end_id() const;
  inline void set_end_id(const ::std::string& value);
  inline void set_end_id(const char* value);
  inline void set_end_id(const void* value, size_t size);
  inline ::std::string* mutable_end_id();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.search.RemoveObjectsRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* start_id_;
  static const ::std::string _default_start_id_;
  ::std::string* end_id_;
  static const ::std::string _default_end_id_;
  friend void  protobuf_AddDesc_service_2fsearch_2fsearch_2eproto();
  friend void protobuf_AssignDesc_service_2fsearch_2fsearch_2eproto();
  friend void protobuf_ShutdownFile_service_2fsearch_2fsearch_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static RemoveObjectsRequest* default_instance_;
};
// -------------------------------------------------------------------

class SearchConfig : public ::google::protobuf::Message {
 public:
  SearchConfig();
  virtual ~SearchConfig();
  
  SearchConfig(const SearchConfig& from);
  
  inline SearchConfig& operator=(const SearchConfig& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchConfig& default_instance();
  
  void Swap(SearchConfig* other);
  
  // implements Message ----------------------------------------------
  
  SearchConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchConfig& from);
  void MergeFrom(const SearchConfig& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.search.SearchConfig)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_service_2fsearch_2fsearch_2eproto();
  friend void protobuf_AssignDesc_service_2fsearch_2fsearch_2eproto();
  friend void protobuf_ShutdownFile_service_2fsearch_2fsearch_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SearchConfig* default_instance_;
};
// ===================================================================

class SearchService_Stub;

class SearchService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline SearchService() {};
 public:
  virtual ~SearchService();
  
  typedef SearchService_Stub Stub;
  
  static const ::google::protobuf::ServiceDescriptor* descriptor();
  
  virtual void FindMatches(::google::protobuf::RpcController* controller,
                       const ::bnet::protocol::search::FindMatchesRequest* request,
                       ::bnet::protocol::search::FindMatchesResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void SetObject(::google::protobuf::RpcController* controller,
                       const ::bnet::protocol::search::SetObjectRequest* request,
                       ::bnet::protocol::NO_RESPONSE* response,
                       ::google::protobuf::Closure* done);
  virtual void RemoveObjects(::google::protobuf::RpcController* controller,
                       const ::bnet::protocol::search::RemoveObjectsRequest* request,
                       ::bnet::protocol::NO_RESPONSE* response,
                       ::google::protobuf::Closure* done);
  
  // implements Service ----------------------------------------------
  
  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(SearchService);
};

class SearchService_Stub : public SearchService {
 public:
  SearchService_Stub(::google::protobuf::RpcChannel* channel);
  SearchService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~SearchService_Stub();
  
  inline ::google::protobuf::RpcChannel* channel() { return channel_; }
  
  // implements SearchService ------------------------------------------
  
  void FindMatches(::google::protobuf::RpcController* controller,
                       const ::bnet::protocol::search::FindMatchesRequest* request,
                       ::bnet::protocol::search::FindMatchesResponse* response,
                       ::google::protobuf::Closure* done);
  void SetObject(::google::protobuf::RpcController* controller,
                       const ::bnet::protocol::search::SetObjectRequest* request,
                       ::bnet::protocol::NO_RESPONSE* response,
                       ::google::protobuf::Closure* done);
  void RemoveObjects(::google::protobuf::RpcController* controller,
                       const ::bnet::protocol::search::RemoveObjectsRequest* request,
                       ::bnet::protocol::NO_RESPONSE* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(SearchService_Stub);
};


// ===================================================================


// ===================================================================

// FindMatchesRequest

// required string universe = 1;
inline bool FindMatchesRequest::has_universe() const {
  return _has_bit(0);
}
inline void FindMatchesRequest::clear_universe() {
  if (universe_ != &_default_universe_) {
    universe_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& FindMatchesRequest::universe() const {
  return *universe_;
}
inline void FindMatchesRequest::set_universe(const ::std::string& value) {
  _set_bit(0);
  if (universe_ == &_default_universe_) {
    universe_ = new ::std::string;
  }
  universe_->assign(value);
}
inline void FindMatchesRequest::set_universe(const char* value) {
  _set_bit(0);
  if (universe_ == &_default_universe_) {
    universe_ = new ::std::string;
  }
  universe_->assign(value);
}
inline void FindMatchesRequest::set_universe(const char* value, size_t size) {
  _set_bit(0);
  if (universe_ == &_default_universe_) {
    universe_ = new ::std::string;
  }
  universe_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FindMatchesRequest::mutable_universe() {
  _set_bit(0);
  if (universe_ == &_default_universe_) {
    universe_ = new ::std::string;
  }
  return universe_;
}

// repeated .bnet.protocol.search.Filter filters = 2;
inline int FindMatchesRequest::filters_size() const {
  return filters_.size();
}
inline void FindMatchesRequest::clear_filters() {
  filters_.Clear();
}
inline const ::bnet::protocol::search::Filter& FindMatchesRequest::filters(int index) const {
  return filters_.Get(index);
}
inline ::bnet::protocol::search::Filter* FindMatchesRequest::mutable_filters(int index) {
  return filters_.Mutable(index);
}
inline ::bnet::protocol::search::Filter* FindMatchesRequest::add_filters() {
  return filters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::search::Filter >&
FindMatchesRequest::filters() const {
  return filters_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::search::Filter >*
FindMatchesRequest::mutable_filters() {
  return &filters_;
}

// optional uint32 starting_index = 3 [default = 0];
inline bool FindMatchesRequest::has_starting_index() const {
  return _has_bit(2);
}
inline void FindMatchesRequest::clear_starting_index() {
  starting_index_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 FindMatchesRequest::starting_index() const {
  return starting_index_;
}
inline void FindMatchesRequest::set_starting_index(::google::protobuf::uint32 value) {
  _set_bit(2);
  starting_index_ = value;
}

// optional uint32 count = 4 [default = 0];
inline bool FindMatchesRequest::has_count() const {
  return _has_bit(3);
}
inline void FindMatchesRequest::clear_count() {
  count_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 FindMatchesRequest::count() const {
  return count_;
}
inline void FindMatchesRequest::set_count(::google::protobuf::uint32 value) {
  _set_bit(3);
  count_ = value;
}

// -------------------------------------------------------------------

// FindMatchesResponse

// required uint32 total_count = 1;
inline bool FindMatchesResponse::has_total_count() const {
  return _has_bit(0);
}
inline void FindMatchesResponse::clear_total_count() {
  total_count_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 FindMatchesResponse::total_count() const {
  return total_count_;
}
inline void FindMatchesResponse::set_total_count(::google::protobuf::uint32 value) {
  _set_bit(0);
  total_count_ = value;
}

// repeated .bnet.protocol.search.Object objects = 2;
inline int FindMatchesResponse::objects_size() const {
  return objects_.size();
}
inline void FindMatchesResponse::clear_objects() {
  objects_.Clear();
}
inline const ::bnet::protocol::search::Object& FindMatchesResponse::objects(int index) const {
  return objects_.Get(index);
}
inline ::bnet::protocol::search::Object* FindMatchesResponse::mutable_objects(int index) {
  return objects_.Mutable(index);
}
inline ::bnet::protocol::search::Object* FindMatchesResponse::add_objects() {
  return objects_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::search::Object >&
FindMatchesResponse::objects() const {
  return objects_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::search::Object >*
FindMatchesResponse::mutable_objects() {
  return &objects_;
}

// -------------------------------------------------------------------

// SetObjectRequest

// repeated .bnet.protocol.search.Object objects = 1;
inline int SetObjectRequest::objects_size() const {
  return objects_.size();
}
inline void SetObjectRequest::clear_objects() {
  objects_.Clear();
}
inline const ::bnet::protocol::search::Object& SetObjectRequest::objects(int index) const {
  return objects_.Get(index);
}
inline ::bnet::protocol::search::Object* SetObjectRequest::mutable_objects(int index) {
  return objects_.Mutable(index);
}
inline ::bnet::protocol::search::Object* SetObjectRequest::add_objects() {
  return objects_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::search::Object >&
SetObjectRequest::objects() const {
  return objects_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::search::Object >*
SetObjectRequest::mutable_objects() {
  return &objects_;
}

// -------------------------------------------------------------------

// RemoveObjectsRequest

// required bytes start_id = 1;
inline bool RemoveObjectsRequest::has_start_id() const {
  return _has_bit(0);
}
inline void RemoveObjectsRequest::clear_start_id() {
  if (start_id_ != &_default_start_id_) {
    start_id_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& RemoveObjectsRequest::start_id() const {
  return *start_id_;
}
inline void RemoveObjectsRequest::set_start_id(const ::std::string& value) {
  _set_bit(0);
  if (start_id_ == &_default_start_id_) {
    start_id_ = new ::std::string;
  }
  start_id_->assign(value);
}
inline void RemoveObjectsRequest::set_start_id(const char* value) {
  _set_bit(0);
  if (start_id_ == &_default_start_id_) {
    start_id_ = new ::std::string;
  }
  start_id_->assign(value);
}
inline void RemoveObjectsRequest::set_start_id(const void* value, size_t size) {
  _set_bit(0);
  if (start_id_ == &_default_start_id_) {
    start_id_ = new ::std::string;
  }
  start_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RemoveObjectsRequest::mutable_start_id() {
  _set_bit(0);
  if (start_id_ == &_default_start_id_) {
    start_id_ = new ::std::string;
  }
  return start_id_;
}

// required bytes end_id = 2;
inline bool RemoveObjectsRequest::has_end_id() const {
  return _has_bit(1);
}
inline void RemoveObjectsRequest::clear_end_id() {
  if (end_id_ != &_default_end_id_) {
    end_id_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& RemoveObjectsRequest::end_id() const {
  return *end_id_;
}
inline void RemoveObjectsRequest::set_end_id(const ::std::string& value) {
  _set_bit(1);
  if (end_id_ == &_default_end_id_) {
    end_id_ = new ::std::string;
  }
  end_id_->assign(value);
}
inline void RemoveObjectsRequest::set_end_id(const char* value) {
  _set_bit(1);
  if (end_id_ == &_default_end_id_) {
    end_id_ = new ::std::string;
  }
  end_id_->assign(value);
}
inline void RemoveObjectsRequest::set_end_id(const void* value, size_t size) {
  _set_bit(1);
  if (end_id_ == &_default_end_id_) {
    end_id_ = new ::std::string;
  }
  end_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RemoveObjectsRequest::mutable_end_id() {
  _set_bit(1);
  if (end_id_ == &_default_end_id_) {
    end_id_ = new ::std::string;
  }
  return end_id_;
}

// -------------------------------------------------------------------

// SearchConfig


// @@protoc_insertion_point(namespace_scope)

}  // namespace search
}  // namespace protocol
}  // namespace bnet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_service_2fsearch_2fsearch_2eproto__INCLUDED

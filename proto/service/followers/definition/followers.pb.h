// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/followers/definition/followers.proto

#ifndef PROTOBUF_service_2ffollowers_2fdefinition_2ffollowers_2eproto__INCLUDED
#define PROTOBUF_service_2ffollowers_2fdefinition_2ffollowers_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/service.h>
#include "lib/protocol/attribute.pb.h"
#include "lib/protocol/entity.pb.h"
#include "lib/rpc/rpc.pb.h"
// @@protoc_insertion_point(includes)

namespace bnet {
namespace protocol {
namespace followers {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
void protobuf_AssignDesc_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
void protobuf_ShutdownFile_service_2ffollowers_2fdefinition_2ffollowers_2eproto();

class FollowedUser;
class SubscribeToFollowersRequest;
class SubscribeToFollowersResponse;
class StartFollowingRequest;
class StartFollowingResponse;
class StopFollowingRequest;
class StopFollowingResponse;
class UpdateFollowerStateRequest;
class UpdateFollowerStateResponse;
class FollowerNotification;

// ===================================================================

class FollowedUser : public ::google::protobuf::Message {
 public:
  FollowedUser();
  virtual ~FollowedUser();
  
  FollowedUser(const FollowedUser& from);
  
  inline FollowedUser& operator=(const FollowedUser& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FollowedUser& default_instance();
  
  void Swap(FollowedUser* other);
  
  // implements Message ----------------------------------------------
  
  FollowedUser* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FollowedUser& from);
  void MergeFrom(const FollowedUser& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.EntityId id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& id() const;
  inline ::bnet::protocol::EntityId* mutable_id();
  
  // repeated .bnet.protocol.attribute.Attribute attribute = 2;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 2;
  inline const ::bnet::protocol::attribute::Attribute& attribute(int index) const;
  inline ::bnet::protocol::attribute::Attribute* mutable_attribute(int index);
  inline ::bnet::protocol::attribute::Attribute* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >*
      mutable_attribute();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.followers.FollowedUser)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::bnet::protocol::EntityId* id_;
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute > attribute_;
  friend void  protobuf_AddDesc_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  friend void protobuf_AssignDesc_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  friend void protobuf_ShutdownFile_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static FollowedUser* default_instance_;
};
// -------------------------------------------------------------------

class SubscribeToFollowersRequest : public ::google::protobuf::Message {
 public:
  SubscribeToFollowersRequest();
  virtual ~SubscribeToFollowersRequest();
  
  SubscribeToFollowersRequest(const SubscribeToFollowersRequest& from);
  
  inline SubscribeToFollowersRequest& operator=(const SubscribeToFollowersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscribeToFollowersRequest& default_instance();
  
  void Swap(SubscribeToFollowersRequest* other);
  
  // implements Message ----------------------------------------------
  
  SubscribeToFollowersRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubscribeToFollowersRequest& from);
  void MergeFrom(const SubscribeToFollowersRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .bnet.protocol.EntityId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& agent_id() const;
  inline ::bnet::protocol::EntityId* mutable_agent_id();
  
  // required uint64 object_id = 2;
  inline bool has_object_id() const;
  inline void clear_object_id();
  static const int kObjectIdFieldNumber = 2;
  inline ::google::protobuf::uint64 object_id() const;
  inline void set_object_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.followers.SubscribeToFollowersRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::bnet::protocol::EntityId* agent_id_;
  ::google::protobuf::uint64 object_id_;
  friend void  protobuf_AddDesc_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  friend void protobuf_AssignDesc_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  friend void protobuf_ShutdownFile_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SubscribeToFollowersRequest* default_instance_;
};
// -------------------------------------------------------------------

class SubscribeToFollowersResponse : public ::google::protobuf::Message {
 public:
  SubscribeToFollowersResponse();
  virtual ~SubscribeToFollowersResponse();
  
  SubscribeToFollowersResponse(const SubscribeToFollowersResponse& from);
  
  inline SubscribeToFollowersResponse& operator=(const SubscribeToFollowersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscribeToFollowersResponse& default_instance();
  
  void Swap(SubscribeToFollowersResponse* other);
  
  // implements Message ----------------------------------------------
  
  SubscribeToFollowersResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubscribeToFollowersResponse& from);
  void MergeFrom(const SubscribeToFollowersResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.followers.FollowedUser followed_users = 2;
  inline int followed_users_size() const;
  inline void clear_followed_users();
  static const int kFollowedUsersFieldNumber = 2;
  inline const ::bnet::protocol::followers::FollowedUser& followed_users(int index) const;
  inline ::bnet::protocol::followers::FollowedUser* mutable_followed_users(int index);
  inline ::bnet::protocol::followers::FollowedUser* add_followed_users();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::followers::FollowedUser >&
      followed_users() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::followers::FollowedUser >*
      mutable_followed_users();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.followers.SubscribeToFollowersResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::followers::FollowedUser > followed_users_;
  friend void  protobuf_AddDesc_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  friend void protobuf_AssignDesc_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  friend void protobuf_ShutdownFile_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SubscribeToFollowersResponse* default_instance_;
};
// -------------------------------------------------------------------

class StartFollowingRequest : public ::google::protobuf::Message {
 public:
  StartFollowingRequest();
  virtual ~StartFollowingRequest();
  
  StartFollowingRequest(const StartFollowingRequest& from);
  
  inline StartFollowingRequest& operator=(const StartFollowingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StartFollowingRequest& default_instance();
  
  void Swap(StartFollowingRequest* other);
  
  // implements Message ----------------------------------------------
  
  StartFollowingRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartFollowingRequest& from);
  void MergeFrom(const StartFollowingRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .bnet.protocol.EntityId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& agent_id() const;
  inline ::bnet::protocol::EntityId* mutable_agent_id();
  
  // optional .bnet.protocol.EntityId target_id = 2;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 2;
  inline const ::bnet::protocol::EntityId& target_id() const;
  inline ::bnet::protocol::EntityId* mutable_target_id();
  
  // optional string follower_name = 3;
  inline bool has_follower_name() const;
  inline void clear_follower_name();
  static const int kFollowerNameFieldNumber = 3;
  inline const ::std::string& follower_name() const;
  inline void set_follower_name(const ::std::string& value);
  inline void set_follower_name(const char* value);
  inline void set_follower_name(const char* value, size_t size);
  inline ::std::string* mutable_follower_name();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.followers.StartFollowingRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::bnet::protocol::EntityId* agent_id_;
  ::bnet::protocol::EntityId* target_id_;
  ::std::string* follower_name_;
  static const ::std::string _default_follower_name_;
  friend void  protobuf_AddDesc_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  friend void protobuf_AssignDesc_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  friend void protobuf_ShutdownFile_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static StartFollowingRequest* default_instance_;
};
// -------------------------------------------------------------------

class StartFollowingResponse : public ::google::protobuf::Message {
 public:
  StartFollowingResponse();
  virtual ~StartFollowingResponse();
  
  StartFollowingResponse(const StartFollowingResponse& from);
  
  inline StartFollowingResponse& operator=(const StartFollowingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StartFollowingResponse& default_instance();
  
  void Swap(StartFollowingResponse* other);
  
  // implements Message ----------------------------------------------
  
  StartFollowingResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartFollowingResponse& from);
  void MergeFrom(const StartFollowingResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .bnet.protocol.followers.FollowedUser followed_user = 2;
  inline bool has_followed_user() const;
  inline void clear_followed_user();
  static const int kFollowedUserFieldNumber = 2;
  inline const ::bnet::protocol::followers::FollowedUser& followed_user() const;
  inline ::bnet::protocol::followers::FollowedUser* mutable_followed_user();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.followers.StartFollowingResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::bnet::protocol::followers::FollowedUser* followed_user_;
  friend void  protobuf_AddDesc_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  friend void protobuf_AssignDesc_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  friend void protobuf_ShutdownFile_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static StartFollowingResponse* default_instance_;
};
// -------------------------------------------------------------------

class StopFollowingRequest : public ::google::protobuf::Message {
 public:
  StopFollowingRequest();
  virtual ~StopFollowingRequest();
  
  StopFollowingRequest(const StopFollowingRequest& from);
  
  inline StopFollowingRequest& operator=(const StopFollowingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StopFollowingRequest& default_instance();
  
  void Swap(StopFollowingRequest* other);
  
  // implements Message ----------------------------------------------
  
  StopFollowingRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StopFollowingRequest& from);
  void MergeFrom(const StopFollowingRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .bnet.protocol.EntityId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& agent_id() const;
  inline ::bnet::protocol::EntityId* mutable_agent_id();
  
  // required .bnet.protocol.EntityId target_id = 2;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 2;
  inline const ::bnet::protocol::EntityId& target_id() const;
  inline ::bnet::protocol::EntityId* mutable_target_id();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.followers.StopFollowingRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::bnet::protocol::EntityId* agent_id_;
  ::bnet::protocol::EntityId* target_id_;
  friend void  protobuf_AddDesc_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  friend void protobuf_AssignDesc_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  friend void protobuf_ShutdownFile_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static StopFollowingRequest* default_instance_;
};
// -------------------------------------------------------------------

class StopFollowingResponse : public ::google::protobuf::Message {
 public:
  StopFollowingResponse();
  virtual ~StopFollowingResponse();
  
  StopFollowingResponse(const StopFollowingResponse& from);
  
  inline StopFollowingResponse& operator=(const StopFollowingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StopFollowingResponse& default_instance();
  
  void Swap(StopFollowingResponse* other);
  
  // implements Message ----------------------------------------------
  
  StopFollowingResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StopFollowingResponse& from);
  void MergeFrom(const StopFollowingResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .bnet.protocol.followers.FollowedUser followed_user = 2;
  inline bool has_followed_user() const;
  inline void clear_followed_user();
  static const int kFollowedUserFieldNumber = 2;
  inline const ::bnet::protocol::followers::FollowedUser& followed_user() const;
  inline ::bnet::protocol::followers::FollowedUser* mutable_followed_user();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.followers.StopFollowingResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::bnet::protocol::followers::FollowedUser* followed_user_;
  friend void  protobuf_AddDesc_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  friend void protobuf_AssignDesc_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  friend void protobuf_ShutdownFile_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static StopFollowingResponse* default_instance_;
};
// -------------------------------------------------------------------

class UpdateFollowerStateRequest : public ::google::protobuf::Message {
 public:
  UpdateFollowerStateRequest();
  virtual ~UpdateFollowerStateRequest();
  
  UpdateFollowerStateRequest(const UpdateFollowerStateRequest& from);
  
  inline UpdateFollowerStateRequest& operator=(const UpdateFollowerStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateFollowerStateRequest& default_instance();
  
  void Swap(UpdateFollowerStateRequest* other);
  
  // implements Message ----------------------------------------------
  
  UpdateFollowerStateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateFollowerStateRequest& from);
  void MergeFrom(const UpdateFollowerStateRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .bnet.protocol.EntityId agent_id = 1;
  inline bool has_agent_id() const;
  inline void clear_agent_id();
  static const int kAgentIdFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& agent_id() const;
  inline ::bnet::protocol::EntityId* mutable_agent_id();
  
  // required .bnet.protocol.EntityId target_id = 2;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 2;
  inline const ::bnet::protocol::EntityId& target_id() const;
  inline ::bnet::protocol::EntityId* mutable_target_id();
  
  // repeated .bnet.protocol.attribute.Attribute attribute = 3;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 3;
  inline const ::bnet::protocol::attribute::Attribute& attribute(int index) const;
  inline ::bnet::protocol::attribute::Attribute* mutable_attribute(int index);
  inline ::bnet::protocol::attribute::Attribute* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >*
      mutable_attribute();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.followers.UpdateFollowerStateRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::bnet::protocol::EntityId* agent_id_;
  ::bnet::protocol::EntityId* target_id_;
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute > attribute_;
  friend void  protobuf_AddDesc_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  friend void protobuf_AssignDesc_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  friend void protobuf_ShutdownFile_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static UpdateFollowerStateRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateFollowerStateResponse : public ::google::protobuf::Message {
 public:
  UpdateFollowerStateResponse();
  virtual ~UpdateFollowerStateResponse();
  
  UpdateFollowerStateResponse(const UpdateFollowerStateResponse& from);
  
  inline UpdateFollowerStateResponse& operator=(const UpdateFollowerStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateFollowerStateResponse& default_instance();
  
  void Swap(UpdateFollowerStateResponse* other);
  
  // implements Message ----------------------------------------------
  
  UpdateFollowerStateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateFollowerStateResponse& from);
  void MergeFrom(const UpdateFollowerStateResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.EntityId target_id = 2;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 2;
  inline const ::bnet::protocol::EntityId& target_id() const;
  inline ::bnet::protocol::EntityId* mutable_target_id();
  
  // repeated .bnet.protocol.attribute.Attribute attribute = 3;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 3;
  inline const ::bnet::protocol::attribute::Attribute& attribute(int index) const;
  inline ::bnet::protocol::attribute::Attribute* mutable_attribute(int index);
  inline ::bnet::protocol::attribute::Attribute* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >*
      mutable_attribute();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.followers.UpdateFollowerStateResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::bnet::protocol::EntityId* target_id_;
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute > attribute_;
  friend void  protobuf_AddDesc_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  friend void protobuf_AssignDesc_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  friend void protobuf_ShutdownFile_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static UpdateFollowerStateResponse* default_instance_;
};
// -------------------------------------------------------------------

class FollowerNotification : public ::google::protobuf::Message {
 public:
  FollowerNotification();
  virtual ~FollowerNotification();
  
  FollowerNotification(const FollowerNotification& from);
  
  inline FollowerNotification& operator=(const FollowerNotification& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FollowerNotification& default_instance();
  
  void Swap(FollowerNotification* other);
  
  // implements Message ----------------------------------------------
  
  FollowerNotification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FollowerNotification& from);
  void MergeFrom(const FollowerNotification& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.followers.FollowedUser followed_user = 1;
  inline bool has_followed_user() const;
  inline void clear_followed_user();
  static const int kFollowedUserFieldNumber = 1;
  inline const ::bnet::protocol::followers::FollowedUser& followed_user() const;
  inline ::bnet::protocol::followers::FollowedUser* mutable_followed_user();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.followers.FollowerNotification)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::bnet::protocol::followers::FollowedUser* followed_user_;
  friend void  protobuf_AddDesc_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  friend void protobuf_AssignDesc_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  friend void protobuf_ShutdownFile_service_2ffollowers_2fdefinition_2ffollowers_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static FollowerNotification* default_instance_;
};
// ===================================================================

class FollowersService_Stub;

class FollowersService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline FollowersService() {};
 public:
  virtual ~FollowersService();
  
  typedef FollowersService_Stub Stub;
  
  static const ::google::protobuf::ServiceDescriptor* descriptor();
  
  virtual void SubscribeToFollowers(::google::protobuf::RpcController* controller,
                       const ::bnet::protocol::followers::SubscribeToFollowersRequest* request,
                       ::bnet::protocol::followers::SubscribeToFollowersResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void StartFollowing(::google::protobuf::RpcController* controller,
                       const ::bnet::protocol::followers::StartFollowingRequest* request,
                       ::bnet::protocol::followers::StartFollowingResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void StopFollowing(::google::protobuf::RpcController* controller,
                       const ::bnet::protocol::followers::StopFollowingRequest* request,
                       ::bnet::protocol::followers::StopFollowingResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void UpdateFollowerState(::google::protobuf::RpcController* controller,
                       const ::bnet::protocol::followers::UpdateFollowerStateRequest* request,
                       ::bnet::protocol::followers::UpdateFollowerStateResponse* response,
                       ::google::protobuf::Closure* done);
  
  // implements Service ----------------------------------------------
  
  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(FollowersService);
};

class FollowersService_Stub : public FollowersService {
 public:
  FollowersService_Stub(::google::protobuf::RpcChannel* channel);
  FollowersService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~FollowersService_Stub();
  
  inline ::google::protobuf::RpcChannel* channel() { return channel_; }
  
  // implements FollowersService ------------------------------------------
  
  void SubscribeToFollowers(::google::protobuf::RpcController* controller,
                       const ::bnet::protocol::followers::SubscribeToFollowersRequest* request,
                       ::bnet::protocol::followers::SubscribeToFollowersResponse* response,
                       ::google::protobuf::Closure* done);
  void StartFollowing(::google::protobuf::RpcController* controller,
                       const ::bnet::protocol::followers::StartFollowingRequest* request,
                       ::bnet::protocol::followers::StartFollowingResponse* response,
                       ::google::protobuf::Closure* done);
  void StopFollowing(::google::protobuf::RpcController* controller,
                       const ::bnet::protocol::followers::StopFollowingRequest* request,
                       ::bnet::protocol::followers::StopFollowingResponse* response,
                       ::google::protobuf::Closure* done);
  void UpdateFollowerState(::google::protobuf::RpcController* controller,
                       const ::bnet::protocol::followers::UpdateFollowerStateRequest* request,
                       ::bnet::protocol::followers::UpdateFollowerStateResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(FollowersService_Stub);
};


// -------------------------------------------------------------------

class FollowersNotify_Stub;

class FollowersNotify : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline FollowersNotify() {};
 public:
  virtual ~FollowersNotify();
  
  typedef FollowersNotify_Stub Stub;
  
  static const ::google::protobuf::ServiceDescriptor* descriptor();
  
  virtual void NotifyFollowerRemoved(::google::protobuf::RpcController* controller,
                       const ::bnet::protocol::followers::FollowerNotification* request,
                       ::bnet::protocol::NO_RESPONSE* response,
                       ::google::protobuf::Closure* done);
  
  // implements Service ----------------------------------------------
  
  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(FollowersNotify);
};

class FollowersNotify_Stub : public FollowersNotify {
 public:
  FollowersNotify_Stub(::google::protobuf::RpcChannel* channel);
  FollowersNotify_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~FollowersNotify_Stub();
  
  inline ::google::protobuf::RpcChannel* channel() { return channel_; }
  
  // implements FollowersNotify ------------------------------------------
  
  void NotifyFollowerRemoved(::google::protobuf::RpcController* controller,
                       const ::bnet::protocol::followers::FollowerNotification* request,
                       ::bnet::protocol::NO_RESPONSE* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(FollowersNotify_Stub);
};


// ===================================================================


// ===================================================================

// FollowedUser

// required .bnet.protocol.EntityId id = 1;
inline bool FollowedUser::has_id() const {
  return _has_bit(0);
}
inline void FollowedUser::clear_id() {
  if (id_ != NULL) id_->::bnet::protocol::EntityId::Clear();
  _clear_bit(0);
}
inline const ::bnet::protocol::EntityId& FollowedUser::id() const {
  return id_ != NULL ? *id_ : *default_instance_->id_;
}
inline ::bnet::protocol::EntityId* FollowedUser::mutable_id() {
  _set_bit(0);
  if (id_ == NULL) id_ = new ::bnet::protocol::EntityId;
  return id_;
}

// repeated .bnet.protocol.attribute.Attribute attribute = 2;
inline int FollowedUser::attribute_size() const {
  return attribute_.size();
}
inline void FollowedUser::clear_attribute() {
  attribute_.Clear();
}
inline const ::bnet::protocol::attribute::Attribute& FollowedUser::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::bnet::protocol::attribute::Attribute* FollowedUser::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::bnet::protocol::attribute::Attribute* FollowedUser::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >&
FollowedUser::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >*
FollowedUser::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// SubscribeToFollowersRequest

// optional .bnet.protocol.EntityId agent_id = 1;
inline bool SubscribeToFollowersRequest::has_agent_id() const {
  return _has_bit(0);
}
inline void SubscribeToFollowersRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bnet::protocol::EntityId::Clear();
  _clear_bit(0);
}
inline const ::bnet::protocol::EntityId& SubscribeToFollowersRequest::agent_id() const {
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bnet::protocol::EntityId* SubscribeToFollowersRequest::mutable_agent_id() {
  _set_bit(0);
  if (agent_id_ == NULL) agent_id_ = new ::bnet::protocol::EntityId;
  return agent_id_;
}

// required uint64 object_id = 2;
inline bool SubscribeToFollowersRequest::has_object_id() const {
  return _has_bit(1);
}
inline void SubscribeToFollowersRequest::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 SubscribeToFollowersRequest::object_id() const {
  return object_id_;
}
inline void SubscribeToFollowersRequest::set_object_id(::google::protobuf::uint64 value) {
  _set_bit(1);
  object_id_ = value;
}

// -------------------------------------------------------------------

// SubscribeToFollowersResponse

// repeated .bnet.protocol.followers.FollowedUser followed_users = 2;
inline int SubscribeToFollowersResponse::followed_users_size() const {
  return followed_users_.size();
}
inline void SubscribeToFollowersResponse::clear_followed_users() {
  followed_users_.Clear();
}
inline const ::bnet::protocol::followers::FollowedUser& SubscribeToFollowersResponse::followed_users(int index) const {
  return followed_users_.Get(index);
}
inline ::bnet::protocol::followers::FollowedUser* SubscribeToFollowersResponse::mutable_followed_users(int index) {
  return followed_users_.Mutable(index);
}
inline ::bnet::protocol::followers::FollowedUser* SubscribeToFollowersResponse::add_followed_users() {
  return followed_users_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::followers::FollowedUser >&
SubscribeToFollowersResponse::followed_users() const {
  return followed_users_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::followers::FollowedUser >*
SubscribeToFollowersResponse::mutable_followed_users() {
  return &followed_users_;
}

// -------------------------------------------------------------------

// StartFollowingRequest

// optional .bnet.protocol.EntityId agent_id = 1;
inline bool StartFollowingRequest::has_agent_id() const {
  return _has_bit(0);
}
inline void StartFollowingRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bnet::protocol::EntityId::Clear();
  _clear_bit(0);
}
inline const ::bnet::protocol::EntityId& StartFollowingRequest::agent_id() const {
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bnet::protocol::EntityId* StartFollowingRequest::mutable_agent_id() {
  _set_bit(0);
  if (agent_id_ == NULL) agent_id_ = new ::bnet::protocol::EntityId;
  return agent_id_;
}

// optional .bnet.protocol.EntityId target_id = 2;
inline bool StartFollowingRequest::has_target_id() const {
  return _has_bit(1);
}
inline void StartFollowingRequest::clear_target_id() {
  if (target_id_ != NULL) target_id_->::bnet::protocol::EntityId::Clear();
  _clear_bit(1);
}
inline const ::bnet::protocol::EntityId& StartFollowingRequest::target_id() const {
  return target_id_ != NULL ? *target_id_ : *default_instance_->target_id_;
}
inline ::bnet::protocol::EntityId* StartFollowingRequest::mutable_target_id() {
  _set_bit(1);
  if (target_id_ == NULL) target_id_ = new ::bnet::protocol::EntityId;
  return target_id_;
}

// optional string follower_name = 3;
inline bool StartFollowingRequest::has_follower_name() const {
  return _has_bit(2);
}
inline void StartFollowingRequest::clear_follower_name() {
  if (follower_name_ != &_default_follower_name_) {
    follower_name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& StartFollowingRequest::follower_name() const {
  return *follower_name_;
}
inline void StartFollowingRequest::set_follower_name(const ::std::string& value) {
  _set_bit(2);
  if (follower_name_ == &_default_follower_name_) {
    follower_name_ = new ::std::string;
  }
  follower_name_->assign(value);
}
inline void StartFollowingRequest::set_follower_name(const char* value) {
  _set_bit(2);
  if (follower_name_ == &_default_follower_name_) {
    follower_name_ = new ::std::string;
  }
  follower_name_->assign(value);
}
inline void StartFollowingRequest::set_follower_name(const char* value, size_t size) {
  _set_bit(2);
  if (follower_name_ == &_default_follower_name_) {
    follower_name_ = new ::std::string;
  }
  follower_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StartFollowingRequest::mutable_follower_name() {
  _set_bit(2);
  if (follower_name_ == &_default_follower_name_) {
    follower_name_ = new ::std::string;
  }
  return follower_name_;
}

// -------------------------------------------------------------------

// StartFollowingResponse

// optional .bnet.protocol.followers.FollowedUser followed_user = 2;
inline bool StartFollowingResponse::has_followed_user() const {
  return _has_bit(0);
}
inline void StartFollowingResponse::clear_followed_user() {
  if (followed_user_ != NULL) followed_user_->::bnet::protocol::followers::FollowedUser::Clear();
  _clear_bit(0);
}
inline const ::bnet::protocol::followers::FollowedUser& StartFollowingResponse::followed_user() const {
  return followed_user_ != NULL ? *followed_user_ : *default_instance_->followed_user_;
}
inline ::bnet::protocol::followers::FollowedUser* StartFollowingResponse::mutable_followed_user() {
  _set_bit(0);
  if (followed_user_ == NULL) followed_user_ = new ::bnet::protocol::followers::FollowedUser;
  return followed_user_;
}

// -------------------------------------------------------------------

// StopFollowingRequest

// optional .bnet.protocol.EntityId agent_id = 1;
inline bool StopFollowingRequest::has_agent_id() const {
  return _has_bit(0);
}
inline void StopFollowingRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bnet::protocol::EntityId::Clear();
  _clear_bit(0);
}
inline const ::bnet::protocol::EntityId& StopFollowingRequest::agent_id() const {
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bnet::protocol::EntityId* StopFollowingRequest::mutable_agent_id() {
  _set_bit(0);
  if (agent_id_ == NULL) agent_id_ = new ::bnet::protocol::EntityId;
  return agent_id_;
}

// required .bnet.protocol.EntityId target_id = 2;
inline bool StopFollowingRequest::has_target_id() const {
  return _has_bit(1);
}
inline void StopFollowingRequest::clear_target_id() {
  if (target_id_ != NULL) target_id_->::bnet::protocol::EntityId::Clear();
  _clear_bit(1);
}
inline const ::bnet::protocol::EntityId& StopFollowingRequest::target_id() const {
  return target_id_ != NULL ? *target_id_ : *default_instance_->target_id_;
}
inline ::bnet::protocol::EntityId* StopFollowingRequest::mutable_target_id() {
  _set_bit(1);
  if (target_id_ == NULL) target_id_ = new ::bnet::protocol::EntityId;
  return target_id_;
}

// -------------------------------------------------------------------

// StopFollowingResponse

// optional .bnet.protocol.followers.FollowedUser followed_user = 2;
inline bool StopFollowingResponse::has_followed_user() const {
  return _has_bit(0);
}
inline void StopFollowingResponse::clear_followed_user() {
  if (followed_user_ != NULL) followed_user_->::bnet::protocol::followers::FollowedUser::Clear();
  _clear_bit(0);
}
inline const ::bnet::protocol::followers::FollowedUser& StopFollowingResponse::followed_user() const {
  return followed_user_ != NULL ? *followed_user_ : *default_instance_->followed_user_;
}
inline ::bnet::protocol::followers::FollowedUser* StopFollowingResponse::mutable_followed_user() {
  _set_bit(0);
  if (followed_user_ == NULL) followed_user_ = new ::bnet::protocol::followers::FollowedUser;
  return followed_user_;
}

// -------------------------------------------------------------------

// UpdateFollowerStateRequest

// optional .bnet.protocol.EntityId agent_id = 1;
inline bool UpdateFollowerStateRequest::has_agent_id() const {
  return _has_bit(0);
}
inline void UpdateFollowerStateRequest::clear_agent_id() {
  if (agent_id_ != NULL) agent_id_->::bnet::protocol::EntityId::Clear();
  _clear_bit(0);
}
inline const ::bnet::protocol::EntityId& UpdateFollowerStateRequest::agent_id() const {
  return agent_id_ != NULL ? *agent_id_ : *default_instance_->agent_id_;
}
inline ::bnet::protocol::EntityId* UpdateFollowerStateRequest::mutable_agent_id() {
  _set_bit(0);
  if (agent_id_ == NULL) agent_id_ = new ::bnet::protocol::EntityId;
  return agent_id_;
}

// required .bnet.protocol.EntityId target_id = 2;
inline bool UpdateFollowerStateRequest::has_target_id() const {
  return _has_bit(1);
}
inline void UpdateFollowerStateRequest::clear_target_id() {
  if (target_id_ != NULL) target_id_->::bnet::protocol::EntityId::Clear();
  _clear_bit(1);
}
inline const ::bnet::protocol::EntityId& UpdateFollowerStateRequest::target_id() const {
  return target_id_ != NULL ? *target_id_ : *default_instance_->target_id_;
}
inline ::bnet::protocol::EntityId* UpdateFollowerStateRequest::mutable_target_id() {
  _set_bit(1);
  if (target_id_ == NULL) target_id_ = new ::bnet::protocol::EntityId;
  return target_id_;
}

// repeated .bnet.protocol.attribute.Attribute attribute = 3;
inline int UpdateFollowerStateRequest::attribute_size() const {
  return attribute_.size();
}
inline void UpdateFollowerStateRequest::clear_attribute() {
  attribute_.Clear();
}
inline const ::bnet::protocol::attribute::Attribute& UpdateFollowerStateRequest::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::bnet::protocol::attribute::Attribute* UpdateFollowerStateRequest::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::bnet::protocol::attribute::Attribute* UpdateFollowerStateRequest::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >&
UpdateFollowerStateRequest::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >*
UpdateFollowerStateRequest::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// UpdateFollowerStateResponse

// required .bnet.protocol.EntityId target_id = 2;
inline bool UpdateFollowerStateResponse::has_target_id() const {
  return _has_bit(0);
}
inline void UpdateFollowerStateResponse::clear_target_id() {
  if (target_id_ != NULL) target_id_->::bnet::protocol::EntityId::Clear();
  _clear_bit(0);
}
inline const ::bnet::protocol::EntityId& UpdateFollowerStateResponse::target_id() const {
  return target_id_ != NULL ? *target_id_ : *default_instance_->target_id_;
}
inline ::bnet::protocol::EntityId* UpdateFollowerStateResponse::mutable_target_id() {
  _set_bit(0);
  if (target_id_ == NULL) target_id_ = new ::bnet::protocol::EntityId;
  return target_id_;
}

// repeated .bnet.protocol.attribute.Attribute attribute = 3;
inline int UpdateFollowerStateResponse::attribute_size() const {
  return attribute_.size();
}
inline void UpdateFollowerStateResponse::clear_attribute() {
  attribute_.Clear();
}
inline const ::bnet::protocol::attribute::Attribute& UpdateFollowerStateResponse::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::bnet::protocol::attribute::Attribute* UpdateFollowerStateResponse::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::bnet::protocol::attribute::Attribute* UpdateFollowerStateResponse::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >&
UpdateFollowerStateResponse::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::attribute::Attribute >*
UpdateFollowerStateResponse::mutable_attribute() {
  return &attribute_;
}

// -------------------------------------------------------------------

// FollowerNotification

// required .bnet.protocol.followers.FollowedUser followed_user = 1;
inline bool FollowerNotification::has_followed_user() const {
  return _has_bit(0);
}
inline void FollowerNotification::clear_followed_user() {
  if (followed_user_ != NULL) followed_user_->::bnet::protocol::followers::FollowedUser::Clear();
  _clear_bit(0);
}
inline const ::bnet::protocol::followers::FollowedUser& FollowerNotification::followed_user() const {
  return followed_user_ != NULL ? *followed_user_ : *default_instance_->followed_user_;
}
inline ::bnet::protocol::followers::FollowedUser* FollowerNotification::mutable_followed_user() {
  _set_bit(0);
  if (followed_user_ == NULL) followed_user_ = new ::bnet::protocol::followers::FollowedUser;
  return followed_user_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace followers
}  // namespace protocol
}  // namespace bnet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_service_2ffollowers_2fdefinition_2ffollowers_2eproto__INCLUDED

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/channel_invitation/channel_invitation_types.proto

#ifndef PROTOBUF_service_2fchannel_5finvitation_2fchannel_5finvitation_5ftypes_2eproto__INCLUDED
#define PROTOBUF_service_2fchannel_5finvitation_2fchannel_5finvitation_5ftypes_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "lib/protocol/invitation.pb.h"
#include "lib/protocol/entity.pb.h"
#include "service/channel/channel_types.pb.h"
// @@protoc_insertion_point(includes)

namespace bnet {
namespace protocol {
namespace channel_invitation {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_service_2fchannel_5finvitation_2fchannel_5finvitation_5ftypes_2eproto();
void protobuf_AssignDesc_service_2fchannel_5finvitation_2fchannel_5finvitation_5ftypes_2eproto();
void protobuf_ShutdownFile_service_2fchannel_5finvitation_2fchannel_5finvitation_5ftypes_2eproto();

class Invitation;
class SendInvitationRequest;
class InvitationCollection;

// ===================================================================

class Invitation : public ::google::protobuf::Message {
 public:
  Invitation();
  virtual ~Invitation();
  
  Invitation(const Invitation& from);
  
  inline Invitation& operator=(const Invitation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Invitation& default_instance();
  
  void Swap(Invitation* other);
  
  // implements Message ----------------------------------------------
  
  Invitation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Invitation& from);
  void MergeFrom(const Invitation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.channel.ChannelDescription channel_description = 1;
  inline bool has_channel_description() const;
  inline void clear_channel_description();
  static const int kChannelDescriptionFieldNumber = 1;
  inline const ::bnet::protocol::channel::ChannelDescription& channel_description() const;
  inline ::bnet::protocol::channel::ChannelDescription* mutable_channel_description();
  
  // optional bool reserved = 2 [default = false];
  inline bool has_reserved() const;
  inline void clear_reserved();
  static const int kReservedFieldNumber = 2;
  inline bool reserved() const;
  inline void set_reserved(bool value);
  
  // optional bool rejoin = 3 [default = false];
  inline bool has_rejoin() const;
  inline void clear_rejoin();
  static const int kRejoinFieldNumber = 3;
  inline bool rejoin() const;
  inline void set_rejoin(bool value);
  
  // optional uint32 service_type = 4;
  inline bool has_service_type() const;
  inline void clear_service_type();
  static const int kServiceTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 service_type() const;
  inline void set_service_type(::google::protobuf::uint32 value);
  
  static const int kChannelInvitationFieldNumber = 105;
  static ::google::protobuf::internal::ExtensionIdentifier< ::bnet::protocol::invitation::Invitation,
      ::google::protobuf::internal::MessageTypeTraits< ::bnet::protocol::channel_invitation::Invitation >, 11, false >
    channel_invitation;
  // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.Invitation)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::bnet::protocol::channel::ChannelDescription* channel_description_;
  bool reserved_;
  bool rejoin_;
  ::google::protobuf::uint32 service_type_;
  friend void  protobuf_AddDesc_service_2fchannel_5finvitation_2fchannel_5finvitation_5ftypes_2eproto();
  friend void protobuf_AssignDesc_service_2fchannel_5finvitation_2fchannel_5finvitation_5ftypes_2eproto();
  friend void protobuf_ShutdownFile_service_2fchannel_5finvitation_2fchannel_5finvitation_5ftypes_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Invitation* default_instance_;
};
// -------------------------------------------------------------------

class SendInvitationRequest : public ::google::protobuf::Message {
 public:
  SendInvitationRequest();
  virtual ~SendInvitationRequest();
  
  SendInvitationRequest(const SendInvitationRequest& from);
  
  inline SendInvitationRequest& operator=(const SendInvitationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendInvitationRequest& default_instance();
  
  void Swap(SendInvitationRequest* other);
  
  // implements Message ----------------------------------------------
  
  SendInvitationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendInvitationRequest& from);
  void MergeFrom(const SendInvitationRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .bnet.protocol.EntityId channel_id = 1;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& channel_id() const;
  inline ::bnet::protocol::EntityId* mutable_channel_id();
  
  // optional bool reserved = 2;
  inline bool has_reserved() const;
  inline void clear_reserved();
  static const int kReservedFieldNumber = 2;
  inline bool reserved() const;
  inline void set_reserved(bool value);
  
  // optional bool rejoin = 3;
  inline bool has_rejoin() const;
  inline void clear_rejoin();
  static const int kRejoinFieldNumber = 3;
  inline bool rejoin() const;
  inline void set_rejoin(bool value);
  
  // optional uint32 service_type = 4;
  inline bool has_service_type() const;
  inline void clear_service_type();
  static const int kServiceTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 service_type() const;
  inline void set_service_type(::google::protobuf::uint32 value);
  
  static const int kChannelInvitationFieldNumber = 105;
  static ::google::protobuf::internal::ExtensionIdentifier< ::bnet::protocol::invitation::SendInvitationRequest,
      ::google::protobuf::internal::MessageTypeTraits< ::bnet::protocol::channel_invitation::SendInvitationRequest >, 11, false >
    channel_invitation;
  // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.SendInvitationRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::bnet::protocol::EntityId* channel_id_;
  bool reserved_;
  bool rejoin_;
  ::google::protobuf::uint32 service_type_;
  friend void  protobuf_AddDesc_service_2fchannel_5finvitation_2fchannel_5finvitation_5ftypes_2eproto();
  friend void protobuf_AssignDesc_service_2fchannel_5finvitation_2fchannel_5finvitation_5ftypes_2eproto();
  friend void protobuf_ShutdownFile_service_2fchannel_5finvitation_2fchannel_5finvitation_5ftypes_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SendInvitationRequest* default_instance_;
};
// -------------------------------------------------------------------

class InvitationCollection : public ::google::protobuf::Message {
 public:
  InvitationCollection();
  virtual ~InvitationCollection();
  
  InvitationCollection(const InvitationCollection& from);
  
  inline InvitationCollection& operator=(const InvitationCollection& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvitationCollection& default_instance();
  
  void Swap(InvitationCollection* other);
  
  // implements Message ----------------------------------------------
  
  InvitationCollection* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InvitationCollection& from);
  void MergeFrom(const InvitationCollection& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 service_type = 1;
  inline bool has_service_type() const;
  inline void clear_service_type();
  static const int kServiceTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 service_type() const;
  inline void set_service_type(::google::protobuf::uint32 value);
  
  // optional uint32 max_received_invitations = 2;
  inline bool has_max_received_invitations() const;
  inline void clear_max_received_invitations();
  static const int kMaxReceivedInvitationsFieldNumber = 2;
  inline ::google::protobuf::uint32 max_received_invitations() const;
  inline void set_max_received_invitations(::google::protobuf::uint32 value);
  
  // optional uint64 object_id = 3;
  inline bool has_object_id() const;
  inline void clear_object_id();
  static const int kObjectIdFieldNumber = 3;
  inline ::google::protobuf::uint64 object_id() const;
  inline void set_object_id(::google::protobuf::uint64 value);
  
  // repeated .bnet.protocol.invitation.Invitation received_invitation = 4;
  inline int received_invitation_size() const;
  inline void clear_received_invitation();
  static const int kReceivedInvitationFieldNumber = 4;
  inline const ::bnet::protocol::invitation::Invitation& received_invitation(int index) const;
  inline ::bnet::protocol::invitation::Invitation* mutable_received_invitation(int index);
  inline ::bnet::protocol::invitation::Invitation* add_received_invitation();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::invitation::Invitation >&
      received_invitation() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::invitation::Invitation >*
      mutable_received_invitation();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.channel_invitation.InvitationCollection)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 service_type_;
  ::google::protobuf::uint32 max_received_invitations_;
  ::google::protobuf::uint64 object_id_;
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::invitation::Invitation > received_invitation_;
  friend void  protobuf_AddDesc_service_2fchannel_5finvitation_2fchannel_5finvitation_5ftypes_2eproto();
  friend void protobuf_AssignDesc_service_2fchannel_5finvitation_2fchannel_5finvitation_5ftypes_2eproto();
  friend void protobuf_ShutdownFile_service_2fchannel_5finvitation_2fchannel_5finvitation_5ftypes_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static InvitationCollection* default_instance_;
};
// ===================================================================


// ===================================================================

// Invitation

// required .bnet.protocol.channel.ChannelDescription channel_description = 1;
inline bool Invitation::has_channel_description() const {
  return _has_bit(0);
}
inline void Invitation::clear_channel_description() {
  if (channel_description_ != NULL) channel_description_->::bnet::protocol::channel::ChannelDescription::Clear();
  _clear_bit(0);
}
inline const ::bnet::protocol::channel::ChannelDescription& Invitation::channel_description() const {
  return channel_description_ != NULL ? *channel_description_ : *default_instance_->channel_description_;
}
inline ::bnet::protocol::channel::ChannelDescription* Invitation::mutable_channel_description() {
  _set_bit(0);
  if (channel_description_ == NULL) channel_description_ = new ::bnet::protocol::channel::ChannelDescription;
  return channel_description_;
}

// optional bool reserved = 2 [default = false];
inline bool Invitation::has_reserved() const {
  return _has_bit(1);
}
inline void Invitation::clear_reserved() {
  reserved_ = false;
  _clear_bit(1);
}
inline bool Invitation::reserved() const {
  return reserved_;
}
inline void Invitation::set_reserved(bool value) {
  _set_bit(1);
  reserved_ = value;
}

// optional bool rejoin = 3 [default = false];
inline bool Invitation::has_rejoin() const {
  return _has_bit(2);
}
inline void Invitation::clear_rejoin() {
  rejoin_ = false;
  _clear_bit(2);
}
inline bool Invitation::rejoin() const {
  return rejoin_;
}
inline void Invitation::set_rejoin(bool value) {
  _set_bit(2);
  rejoin_ = value;
}

// optional uint32 service_type = 4;
inline bool Invitation::has_service_type() const {
  return _has_bit(3);
}
inline void Invitation::clear_service_type() {
  service_type_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 Invitation::service_type() const {
  return service_type_;
}
inline void Invitation::set_service_type(::google::protobuf::uint32 value) {
  _set_bit(3);
  service_type_ = value;
}

// -------------------------------------------------------------------

// SendInvitationRequest

// optional .bnet.protocol.EntityId channel_id = 1;
inline bool SendInvitationRequest::has_channel_id() const {
  return _has_bit(0);
}
inline void SendInvitationRequest::clear_channel_id() {
  if (channel_id_ != NULL) channel_id_->::bnet::protocol::EntityId::Clear();
  _clear_bit(0);
}
inline const ::bnet::protocol::EntityId& SendInvitationRequest::channel_id() const {
  return channel_id_ != NULL ? *channel_id_ : *default_instance_->channel_id_;
}
inline ::bnet::protocol::EntityId* SendInvitationRequest::mutable_channel_id() {
  _set_bit(0);
  if (channel_id_ == NULL) channel_id_ = new ::bnet::protocol::EntityId;
  return channel_id_;
}

// optional bool reserved = 2;
inline bool SendInvitationRequest::has_reserved() const {
  return _has_bit(1);
}
inline void SendInvitationRequest::clear_reserved() {
  reserved_ = false;
  _clear_bit(1);
}
inline bool SendInvitationRequest::reserved() const {
  return reserved_;
}
inline void SendInvitationRequest::set_reserved(bool value) {
  _set_bit(1);
  reserved_ = value;
}

// optional bool rejoin = 3;
inline bool SendInvitationRequest::has_rejoin() const {
  return _has_bit(2);
}
inline void SendInvitationRequest::clear_rejoin() {
  rejoin_ = false;
  _clear_bit(2);
}
inline bool SendInvitationRequest::rejoin() const {
  return rejoin_;
}
inline void SendInvitationRequest::set_rejoin(bool value) {
  _set_bit(2);
  rejoin_ = value;
}

// optional uint32 service_type = 4;
inline bool SendInvitationRequest::has_service_type() const {
  return _has_bit(3);
}
inline void SendInvitationRequest::clear_service_type() {
  service_type_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 SendInvitationRequest::service_type() const {
  return service_type_;
}
inline void SendInvitationRequest::set_service_type(::google::protobuf::uint32 value) {
  _set_bit(3);
  service_type_ = value;
}

// -------------------------------------------------------------------

// InvitationCollection

// optional uint32 service_type = 1;
inline bool InvitationCollection::has_service_type() const {
  return _has_bit(0);
}
inline void InvitationCollection::clear_service_type() {
  service_type_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 InvitationCollection::service_type() const {
  return service_type_;
}
inline void InvitationCollection::set_service_type(::google::protobuf::uint32 value) {
  _set_bit(0);
  service_type_ = value;
}

// optional uint32 max_received_invitations = 2;
inline bool InvitationCollection::has_max_received_invitations() const {
  return _has_bit(1);
}
inline void InvitationCollection::clear_max_received_invitations() {
  max_received_invitations_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 InvitationCollection::max_received_invitations() const {
  return max_received_invitations_;
}
inline void InvitationCollection::set_max_received_invitations(::google::protobuf::uint32 value) {
  _set_bit(1);
  max_received_invitations_ = value;
}

// optional uint64 object_id = 3;
inline bool InvitationCollection::has_object_id() const {
  return _has_bit(2);
}
inline void InvitationCollection::clear_object_id() {
  object_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 InvitationCollection::object_id() const {
  return object_id_;
}
inline void InvitationCollection::set_object_id(::google::protobuf::uint64 value) {
  _set_bit(2);
  object_id_ = value;
}

// repeated .bnet.protocol.invitation.Invitation received_invitation = 4;
inline int InvitationCollection::received_invitation_size() const {
  return received_invitation_.size();
}
inline void InvitationCollection::clear_received_invitation() {
  received_invitation_.Clear();
}
inline const ::bnet::protocol::invitation::Invitation& InvitationCollection::received_invitation(int index) const {
  return received_invitation_.Get(index);
}
inline ::bnet::protocol::invitation::Invitation* InvitationCollection::mutable_received_invitation(int index) {
  return received_invitation_.Mutable(index);
}
inline ::bnet::protocol::invitation::Invitation* InvitationCollection::add_received_invitation() {
  return received_invitation_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::invitation::Invitation >&
InvitationCollection::received_invitation() const {
  return received_invitation_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::invitation::Invitation >*
InvitationCollection::mutable_received_invitation() {
  return &received_invitation_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace channel_invitation
}  // namespace protocol
}  // namespace bnet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_service_2fchannel_5finvitation_2fchannel_5finvitation_5ftypes_2eproto__INCLUDED

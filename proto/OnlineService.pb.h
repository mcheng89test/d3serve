// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OnlineService.proto

#ifndef PROTOBUF_OnlineService_2eproto__INCLUDED
#define PROTOBUF_OnlineService_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace D3 {
namespace OnlineService {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_OnlineService_2eproto();
void protobuf_AssignDesc_OnlineService_2eproto();
void protobuf_ShutdownFile_OnlineService_2eproto();

class EntityId;
class GameId;
class ItemId;
class CoopCreateParams;
class PvPCreateParams;
class GameCreateParams;
class HeroCreateParams;

// ===================================================================

class EntityId : public ::google::protobuf::Message {
 public:
  EntityId();
  virtual ~EntityId();
  
  EntityId(const EntityId& from);
  
  inline EntityId& operator=(const EntityId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityId& default_instance();
  
  void Swap(EntityId* other);
  
  // implements Message ----------------------------------------------
  
  EntityId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EntityId& from);
  void MergeFrom(const EntityId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 id_high = 1;
  inline bool has_id_high() const;
  inline void clear_id_high();
  static const int kIdHighFieldNumber = 1;
  inline ::google::protobuf::uint64 id_high() const;
  inline void set_id_high(::google::protobuf::uint64 value);
  
  // required uint64 id_low = 2;
  inline bool has_id_low() const;
  inline void clear_id_low();
  static const int kIdLowFieldNumber = 2;
  inline ::google::protobuf::uint64 id_low() const;
  inline void set_id_low(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:D3.OnlineService.EntityId)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 id_high_;
  ::google::protobuf::uint64 id_low_;
  friend void  protobuf_AddDesc_OnlineService_2eproto();
  friend void protobuf_AssignDesc_OnlineService_2eproto();
  friend void protobuf_ShutdownFile_OnlineService_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static EntityId* default_instance_;
};
// -------------------------------------------------------------------

class GameId : public ::google::protobuf::Message {
 public:
  GameId();
  virtual ~GameId();
  
  GameId(const GameId& from);
  
  inline GameId& operator=(const GameId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameId& default_instance();
  
  void Swap(GameId* other);
  
  // implements Message ----------------------------------------------
  
  GameId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameId& from);
  void MergeFrom(const GameId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 factory = 1;
  inline bool has_factory() const;
  inline void clear_factory();
  static const int kFactoryFieldNumber = 1;
  inline ::google::protobuf::uint64 factory() const;
  inline void set_factory(::google::protobuf::uint64 value);
  
  // required uint64 id_high = 2;
  inline bool has_id_high() const;
  inline void clear_id_high();
  static const int kIdHighFieldNumber = 2;
  inline ::google::protobuf::uint64 id_high() const;
  inline void set_id_high(::google::protobuf::uint64 value);
  
  // required uint64 id_low = 3;
  inline bool has_id_low() const;
  inline void clear_id_low();
  static const int kIdLowFieldNumber = 3;
  inline ::google::protobuf::uint64 id_low() const;
  inline void set_id_low(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:D3.OnlineService.GameId)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 factory_;
  ::google::protobuf::uint64 id_high_;
  ::google::protobuf::uint64 id_low_;
  friend void  protobuf_AddDesc_OnlineService_2eproto();
  friend void protobuf_AssignDesc_OnlineService_2eproto();
  friend void protobuf_ShutdownFile_OnlineService_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static GameId* default_instance_;
};
// -------------------------------------------------------------------

class ItemId : public ::google::protobuf::Message {
 public:
  ItemId();
  virtual ~ItemId();
  
  ItemId(const ItemId& from);
  
  inline ItemId& operator=(const ItemId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemId& default_instance();
  
  void Swap(ItemId* other);
  
  // implements Message ----------------------------------------------
  
  ItemId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemId& from);
  void MergeFrom(const ItemId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 id_high = 1;
  inline bool has_id_high() const;
  inline void clear_id_high();
  static const int kIdHighFieldNumber = 1;
  inline ::google::protobuf::uint64 id_high() const;
  inline void set_id_high(::google::protobuf::uint64 value);
  
  // required uint64 id_low = 2;
  inline bool has_id_low() const;
  inline void clear_id_low();
  static const int kIdLowFieldNumber = 2;
  inline ::google::protobuf::uint64 id_low() const;
  inline void set_id_low(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:D3.OnlineService.ItemId)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 id_high_;
  ::google::protobuf::uint64 id_low_;
  friend void  protobuf_AddDesc_OnlineService_2eproto();
  friend void protobuf_AssignDesc_OnlineService_2eproto();
  friend void protobuf_ShutdownFile_OnlineService_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ItemId* default_instance_;
};
// -------------------------------------------------------------------

class CoopCreateParams : public ::google::protobuf::Message {
 public:
  CoopCreateParams();
  virtual ~CoopCreateParams();
  
  CoopCreateParams(const CoopCreateParams& from);
  
  inline CoopCreateParams& operator=(const CoopCreateParams& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoopCreateParams& default_instance();
  
  void Swap(CoopCreateParams* other);
  
  // implements Message ----------------------------------------------
  
  CoopCreateParams* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CoopCreateParams& from);
  void MergeFrom(const CoopCreateParams& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 difficulty_level = 1;
  inline bool has_difficulty_level() const;
  inline void clear_difficulty_level();
  static const int kDifficultyLevelFieldNumber = 1;
  inline ::google::protobuf::int32 difficulty_level() const;
  inline void set_difficulty_level(::google::protobuf::int32 value);
  
  // required sint32 act = 2;
  inline bool has_act() const;
  inline void clear_act();
  static const int kActFieldNumber = 2;
  inline ::google::protobuf::int32 act() const;
  inline void set_act(::google::protobuf::int32 value);
  
  // required sfixed32 sno_quest = 3;
  inline bool has_sno_quest() const;
  inline void clear_sno_quest();
  static const int kSnoQuestFieldNumber = 3;
  inline ::google::protobuf::int32 sno_quest() const;
  inline void set_sno_quest(::google::protobuf::int32 value);
  
  // required int32 quest_step_id = 4;
  inline bool has_quest_step_id() const;
  inline void clear_quest_step_id();
  static const int kQuestStepIdFieldNumber = 4;
  inline ::google::protobuf::int32 quest_step_id() const;
  inline void set_quest_step_id(::google::protobuf::int32 value);
  
  // optional .D3.OnlineService.EntityId resume_from_save_hero_id = 5;
  inline bool has_resume_from_save_hero_id() const;
  inline void clear_resume_from_save_hero_id();
  static const int kResumeFromSaveHeroIdFieldNumber = 5;
  inline const ::D3::OnlineService::EntityId& resume_from_save_hero_id() const;
  inline ::D3::OnlineService::EntityId* mutable_resume_from_save_hero_id();
  
  // required bool open_to_friends = 6;
  inline bool has_open_to_friends() const;
  inline void clear_open_to_friends();
  static const int kOpenToFriendsFieldNumber = 6;
  inline bool open_to_friends() const;
  inline void set_open_to_friends(bool value);
  
  // optional string open_to_friends_message = 7;
  inline bool has_open_to_friends_message() const;
  inline void clear_open_to_friends_message();
  static const int kOpenToFriendsMessageFieldNumber = 7;
  inline const ::std::string& open_to_friends_message() const;
  inline void set_open_to_friends_message(const ::std::string& value);
  inline void set_open_to_friends_message(const char* value);
  inline void set_open_to_friends_message(const char* value, size_t size);
  inline ::std::string* mutable_open_to_friends_message();
  
  // @@protoc_insertion_point(class_scope:D3.OnlineService.CoopCreateParams)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 difficulty_level_;
  ::google::protobuf::int32 act_;
  ::google::protobuf::int32 sno_quest_;
  ::google::protobuf::int32 quest_step_id_;
  ::D3::OnlineService::EntityId* resume_from_save_hero_id_;
  bool open_to_friends_;
  ::std::string* open_to_friends_message_;
  static const ::std::string _default_open_to_friends_message_;
  friend void  protobuf_AddDesc_OnlineService_2eproto();
  friend void protobuf_AssignDesc_OnlineService_2eproto();
  friend void protobuf_ShutdownFile_OnlineService_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CoopCreateParams* default_instance_;
};
// -------------------------------------------------------------------

class PvPCreateParams : public ::google::protobuf::Message {
 public:
  PvPCreateParams();
  virtual ~PvPCreateParams();
  
  PvPCreateParams(const PvPCreateParams& from);
  
  inline PvPCreateParams& operator=(const PvPCreateParams& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PvPCreateParams& default_instance();
  
  void Swap(PvPCreateParams* other);
  
  // implements Message ----------------------------------------------
  
  PvPCreateParams* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PvPCreateParams& from);
  void MergeFrom(const PvPCreateParams& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required sfixed32 sno_world = 1;
  inline bool has_sno_world() const;
  inline void clear_sno_world();
  static const int kSnoWorldFieldNumber = 1;
  inline ::google::protobuf::int32 sno_world() const;
  inline void set_sno_world(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:D3.OnlineService.PvPCreateParams)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 sno_world_;
  friend void  protobuf_AddDesc_OnlineService_2eproto();
  friend void protobuf_AssignDesc_OnlineService_2eproto();
  friend void protobuf_ShutdownFile_OnlineService_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PvPCreateParams* default_instance_;
};
// -------------------------------------------------------------------

class GameCreateParams : public ::google::protobuf::Message {
 public:
  GameCreateParams();
  virtual ~GameCreateParams();
  
  GameCreateParams(const GameCreateParams& from);
  
  inline GameCreateParams& operator=(const GameCreateParams& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameCreateParams& default_instance();
  
  void Swap(GameCreateParams* other);
  
  // implements Message ----------------------------------------------
  
  GameCreateParams* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameCreateParams& from);
  void MergeFrom(const GameCreateParams& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required sint32 game_type = 1;
  inline bool has_game_type() const;
  inline void clear_game_type();
  static const int kGameTypeFieldNumber = 1;
  inline ::google::protobuf::int32 game_type() const;
  inline void set_game_type(::google::protobuf::int32 value);
  
  // required uint32 creation_flags = 2;
  inline bool has_creation_flags() const;
  inline void clear_creation_flags();
  static const int kCreationFlagsFieldNumber = 2;
  inline ::google::protobuf::uint32 creation_flags() const;
  inline void set_creation_flags(::google::protobuf::uint32 value);
  
  // optional .D3.OnlineService.CoopCreateParams coop = 3;
  inline bool has_coop() const;
  inline void clear_coop();
  static const int kCoopFieldNumber = 3;
  inline const ::D3::OnlineService::CoopCreateParams& coop() const;
  inline ::D3::OnlineService::CoopCreateParams* mutable_coop();
  
  // optional .D3.OnlineService.PvPCreateParams pvp = 4;
  inline bool has_pvp() const;
  inline void clear_pvp();
  static const int kPvpFieldNumber = 4;
  inline const ::D3::OnlineService::PvPCreateParams& pvp() const;
  inline ::D3::OnlineService::PvPCreateParams* mutable_pvp();
  
  // optional string name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // required bool is_private = 6;
  inline bool has_is_private() const;
  inline void clear_is_private();
  static const int kIsPrivateFieldNumber = 6;
  inline bool is_private() const;
  inline void set_is_private(bool value);
  
  // @@protoc_insertion_point(class_scope:D3.OnlineService.GameCreateParams)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 game_type_;
  ::google::protobuf::uint32 creation_flags_;
  ::D3::OnlineService::CoopCreateParams* coop_;
  ::D3::OnlineService::PvPCreateParams* pvp_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  bool is_private_;
  friend void  protobuf_AddDesc_OnlineService_2eproto();
  friend void protobuf_AssignDesc_OnlineService_2eproto();
  friend void protobuf_ShutdownFile_OnlineService_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static GameCreateParams* default_instance_;
};
// -------------------------------------------------------------------

class HeroCreateParams : public ::google::protobuf::Message {
 public:
  HeroCreateParams();
  virtual ~HeroCreateParams();
  
  HeroCreateParams(const HeroCreateParams& from);
  
  inline HeroCreateParams& operator=(const HeroCreateParams& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroCreateParams& default_instance();
  
  void Swap(HeroCreateParams* other);
  
  // implements Message ----------------------------------------------
  
  HeroCreateParams* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroCreateParams& from);
  void MergeFrom(const HeroCreateParams& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required sfixed32 gbid_class = 1;
  inline bool has_gbid_class() const;
  inline void clear_gbid_class();
  static const int kGbidClassFieldNumber = 1;
  inline ::google::protobuf::int32 gbid_class() const;
  inline void set_gbid_class(::google::protobuf::int32 value);
  
  // required bool is_hardcore = 2;
  inline bool has_is_hardcore() const;
  inline void clear_is_hardcore();
  static const int kIsHardcoreFieldNumber = 2;
  inline bool is_hardcore() const;
  inline void set_is_hardcore(bool value);
  
  // required bool is_female = 3;
  inline bool has_is_female() const;
  inline void clear_is_female();
  static const int kIsFemaleFieldNumber = 3;
  inline bool is_female() const;
  inline void set_is_female(bool value);
  
  // @@protoc_insertion_point(class_scope:D3.OnlineService.HeroCreateParams)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 gbid_class_;
  bool is_hardcore_;
  bool is_female_;
  friend void  protobuf_AddDesc_OnlineService_2eproto();
  friend void protobuf_AssignDesc_OnlineService_2eproto();
  friend void protobuf_ShutdownFile_OnlineService_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static HeroCreateParams* default_instance_;
};
// ===================================================================


// ===================================================================

// EntityId

// required uint64 id_high = 1;
inline bool EntityId::has_id_high() const {
  return _has_bit(0);
}
inline void EntityId::clear_id_high() {
  id_high_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 EntityId::id_high() const {
  return id_high_;
}
inline void EntityId::set_id_high(::google::protobuf::uint64 value) {
  _set_bit(0);
  id_high_ = value;
}

// required uint64 id_low = 2;
inline bool EntityId::has_id_low() const {
  return _has_bit(1);
}
inline void EntityId::clear_id_low() {
  id_low_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 EntityId::id_low() const {
  return id_low_;
}
inline void EntityId::set_id_low(::google::protobuf::uint64 value) {
  _set_bit(1);
  id_low_ = value;
}

// -------------------------------------------------------------------

// GameId

// required uint64 factory = 1;
inline bool GameId::has_factory() const {
  return _has_bit(0);
}
inline void GameId::clear_factory() {
  factory_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 GameId::factory() const {
  return factory_;
}
inline void GameId::set_factory(::google::protobuf::uint64 value) {
  _set_bit(0);
  factory_ = value;
}

// required uint64 id_high = 2;
inline bool GameId::has_id_high() const {
  return _has_bit(1);
}
inline void GameId::clear_id_high() {
  id_high_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 GameId::id_high() const {
  return id_high_;
}
inline void GameId::set_id_high(::google::protobuf::uint64 value) {
  _set_bit(1);
  id_high_ = value;
}

// required uint64 id_low = 3;
inline bool GameId::has_id_low() const {
  return _has_bit(2);
}
inline void GameId::clear_id_low() {
  id_low_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 GameId::id_low() const {
  return id_low_;
}
inline void GameId::set_id_low(::google::protobuf::uint64 value) {
  _set_bit(2);
  id_low_ = value;
}

// -------------------------------------------------------------------

// ItemId

// required uint64 id_high = 1;
inline bool ItemId::has_id_high() const {
  return _has_bit(0);
}
inline void ItemId::clear_id_high() {
  id_high_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 ItemId::id_high() const {
  return id_high_;
}
inline void ItemId::set_id_high(::google::protobuf::uint64 value) {
  _set_bit(0);
  id_high_ = value;
}

// required uint64 id_low = 2;
inline bool ItemId::has_id_low() const {
  return _has_bit(1);
}
inline void ItemId::clear_id_low() {
  id_low_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 ItemId::id_low() const {
  return id_low_;
}
inline void ItemId::set_id_low(::google::protobuf::uint64 value) {
  _set_bit(1);
  id_low_ = value;
}

// -------------------------------------------------------------------

// CoopCreateParams

// required int32 difficulty_level = 1;
inline bool CoopCreateParams::has_difficulty_level() const {
  return _has_bit(0);
}
inline void CoopCreateParams::clear_difficulty_level() {
  difficulty_level_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 CoopCreateParams::difficulty_level() const {
  return difficulty_level_;
}
inline void CoopCreateParams::set_difficulty_level(::google::protobuf::int32 value) {
  _set_bit(0);
  difficulty_level_ = value;
}

// required sint32 act = 2;
inline bool CoopCreateParams::has_act() const {
  return _has_bit(1);
}
inline void CoopCreateParams::clear_act() {
  act_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 CoopCreateParams::act() const {
  return act_;
}
inline void CoopCreateParams::set_act(::google::protobuf::int32 value) {
  _set_bit(1);
  act_ = value;
}

// required sfixed32 sno_quest = 3;
inline bool CoopCreateParams::has_sno_quest() const {
  return _has_bit(2);
}
inline void CoopCreateParams::clear_sno_quest() {
  sno_quest_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 CoopCreateParams::sno_quest() const {
  return sno_quest_;
}
inline void CoopCreateParams::set_sno_quest(::google::protobuf::int32 value) {
  _set_bit(2);
  sno_quest_ = value;
}

// required int32 quest_step_id = 4;
inline bool CoopCreateParams::has_quest_step_id() const {
  return _has_bit(3);
}
inline void CoopCreateParams::clear_quest_step_id() {
  quest_step_id_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 CoopCreateParams::quest_step_id() const {
  return quest_step_id_;
}
inline void CoopCreateParams::set_quest_step_id(::google::protobuf::int32 value) {
  _set_bit(3);
  quest_step_id_ = value;
}

// optional .D3.OnlineService.EntityId resume_from_save_hero_id = 5;
inline bool CoopCreateParams::has_resume_from_save_hero_id() const {
  return _has_bit(4);
}
inline void CoopCreateParams::clear_resume_from_save_hero_id() {
  if (resume_from_save_hero_id_ != NULL) resume_from_save_hero_id_->::D3::OnlineService::EntityId::Clear();
  _clear_bit(4);
}
inline const ::D3::OnlineService::EntityId& CoopCreateParams::resume_from_save_hero_id() const {
  return resume_from_save_hero_id_ != NULL ? *resume_from_save_hero_id_ : *default_instance_->resume_from_save_hero_id_;
}
inline ::D3::OnlineService::EntityId* CoopCreateParams::mutable_resume_from_save_hero_id() {
  _set_bit(4);
  if (resume_from_save_hero_id_ == NULL) resume_from_save_hero_id_ = new ::D3::OnlineService::EntityId;
  return resume_from_save_hero_id_;
}

// required bool open_to_friends = 6;
inline bool CoopCreateParams::has_open_to_friends() const {
  return _has_bit(5);
}
inline void CoopCreateParams::clear_open_to_friends() {
  open_to_friends_ = false;
  _clear_bit(5);
}
inline bool CoopCreateParams::open_to_friends() const {
  return open_to_friends_;
}
inline void CoopCreateParams::set_open_to_friends(bool value) {
  _set_bit(5);
  open_to_friends_ = value;
}

// optional string open_to_friends_message = 7;
inline bool CoopCreateParams::has_open_to_friends_message() const {
  return _has_bit(6);
}
inline void CoopCreateParams::clear_open_to_friends_message() {
  if (open_to_friends_message_ != &_default_open_to_friends_message_) {
    open_to_friends_message_->clear();
  }
  _clear_bit(6);
}
inline const ::std::string& CoopCreateParams::open_to_friends_message() const {
  return *open_to_friends_message_;
}
inline void CoopCreateParams::set_open_to_friends_message(const ::std::string& value) {
  _set_bit(6);
  if (open_to_friends_message_ == &_default_open_to_friends_message_) {
    open_to_friends_message_ = new ::std::string;
  }
  open_to_friends_message_->assign(value);
}
inline void CoopCreateParams::set_open_to_friends_message(const char* value) {
  _set_bit(6);
  if (open_to_friends_message_ == &_default_open_to_friends_message_) {
    open_to_friends_message_ = new ::std::string;
  }
  open_to_friends_message_->assign(value);
}
inline void CoopCreateParams::set_open_to_friends_message(const char* value, size_t size) {
  _set_bit(6);
  if (open_to_friends_message_ == &_default_open_to_friends_message_) {
    open_to_friends_message_ = new ::std::string;
  }
  open_to_friends_message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CoopCreateParams::mutable_open_to_friends_message() {
  _set_bit(6);
  if (open_to_friends_message_ == &_default_open_to_friends_message_) {
    open_to_friends_message_ = new ::std::string;
  }
  return open_to_friends_message_;
}

// -------------------------------------------------------------------

// PvPCreateParams

// required sfixed32 sno_world = 1;
inline bool PvPCreateParams::has_sno_world() const {
  return _has_bit(0);
}
inline void PvPCreateParams::clear_sno_world() {
  sno_world_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 PvPCreateParams::sno_world() const {
  return sno_world_;
}
inline void PvPCreateParams::set_sno_world(::google::protobuf::int32 value) {
  _set_bit(0);
  sno_world_ = value;
}

// -------------------------------------------------------------------

// GameCreateParams

// required sint32 game_type = 1;
inline bool GameCreateParams::has_game_type() const {
  return _has_bit(0);
}
inline void GameCreateParams::clear_game_type() {
  game_type_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 GameCreateParams::game_type() const {
  return game_type_;
}
inline void GameCreateParams::set_game_type(::google::protobuf::int32 value) {
  _set_bit(0);
  game_type_ = value;
}

// required uint32 creation_flags = 2;
inline bool GameCreateParams::has_creation_flags() const {
  return _has_bit(1);
}
inline void GameCreateParams::clear_creation_flags() {
  creation_flags_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 GameCreateParams::creation_flags() const {
  return creation_flags_;
}
inline void GameCreateParams::set_creation_flags(::google::protobuf::uint32 value) {
  _set_bit(1);
  creation_flags_ = value;
}

// optional .D3.OnlineService.CoopCreateParams coop = 3;
inline bool GameCreateParams::has_coop() const {
  return _has_bit(2);
}
inline void GameCreateParams::clear_coop() {
  if (coop_ != NULL) coop_->::D3::OnlineService::CoopCreateParams::Clear();
  _clear_bit(2);
}
inline const ::D3::OnlineService::CoopCreateParams& GameCreateParams::coop() const {
  return coop_ != NULL ? *coop_ : *default_instance_->coop_;
}
inline ::D3::OnlineService::CoopCreateParams* GameCreateParams::mutable_coop() {
  _set_bit(2);
  if (coop_ == NULL) coop_ = new ::D3::OnlineService::CoopCreateParams;
  return coop_;
}

// optional .D3.OnlineService.PvPCreateParams pvp = 4;
inline bool GameCreateParams::has_pvp() const {
  return _has_bit(3);
}
inline void GameCreateParams::clear_pvp() {
  if (pvp_ != NULL) pvp_->::D3::OnlineService::PvPCreateParams::Clear();
  _clear_bit(3);
}
inline const ::D3::OnlineService::PvPCreateParams& GameCreateParams::pvp() const {
  return pvp_ != NULL ? *pvp_ : *default_instance_->pvp_;
}
inline ::D3::OnlineService::PvPCreateParams* GameCreateParams::mutable_pvp() {
  _set_bit(3);
  if (pvp_ == NULL) pvp_ = new ::D3::OnlineService::PvPCreateParams;
  return pvp_;
}

// optional string name = 5;
inline bool GameCreateParams::has_name() const {
  return _has_bit(4);
}
inline void GameCreateParams::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(4);
}
inline const ::std::string& GameCreateParams::name() const {
  return *name_;
}
inline void GameCreateParams::set_name(const ::std::string& value) {
  _set_bit(4);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GameCreateParams::set_name(const char* value) {
  _set_bit(4);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GameCreateParams::set_name(const char* value, size_t size) {
  _set_bit(4);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GameCreateParams::mutable_name() {
  _set_bit(4);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// required bool is_private = 6;
inline bool GameCreateParams::has_is_private() const {
  return _has_bit(5);
}
inline void GameCreateParams::clear_is_private() {
  is_private_ = false;
  _clear_bit(5);
}
inline bool GameCreateParams::is_private() const {
  return is_private_;
}
inline void GameCreateParams::set_is_private(bool value) {
  _set_bit(5);
  is_private_ = value;
}

// -------------------------------------------------------------------

// HeroCreateParams

// required sfixed32 gbid_class = 1;
inline bool HeroCreateParams::has_gbid_class() const {
  return _has_bit(0);
}
inline void HeroCreateParams::clear_gbid_class() {
  gbid_class_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 HeroCreateParams::gbid_class() const {
  return gbid_class_;
}
inline void HeroCreateParams::set_gbid_class(::google::protobuf::int32 value) {
  _set_bit(0);
  gbid_class_ = value;
}

// required bool is_hardcore = 2;
inline bool HeroCreateParams::has_is_hardcore() const {
  return _has_bit(1);
}
inline void HeroCreateParams::clear_is_hardcore() {
  is_hardcore_ = false;
  _clear_bit(1);
}
inline bool HeroCreateParams::is_hardcore() const {
  return is_hardcore_;
}
inline void HeroCreateParams::set_is_hardcore(bool value) {
  _set_bit(1);
  is_hardcore_ = value;
}

// required bool is_female = 3;
inline bool HeroCreateParams::has_is_female() const {
  return _has_bit(2);
}
inline void HeroCreateParams::clear_is_female() {
  is_female_ = false;
  _clear_bit(2);
}
inline bool HeroCreateParams::is_female() const {
  return is_female_;
}
inline void HeroCreateParams::set_is_female(bool value) {
  _set_bit(2);
  is_female_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace OnlineService
}  // namespace D3

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_OnlineService_2eproto__INCLUDED

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lib/protocol/exchange_object_provider.proto

#ifndef PROTOBUF_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto__INCLUDED
#define PROTOBUF_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "lib/protocol/entity.pb.h"
#include "lib/protocol/exchange.pb.h"
// @@protoc_insertion_point(includes)

namespace bnet {
namespace protocol {
namespace exchange_object_provider {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto();
void protobuf_AssignDesc_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto();
void protobuf_ShutdownFile_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto();

class ReportAuthorizeRequest;
class ReportSettleRequest;
class ReportCancelRequest;
class GetPaymentMethodsRequest;
class PaymentMethod;
class GetPaymentMethodsResponse;

// ===================================================================

class ReportAuthorizeRequest : public ::google::protobuf::Message {
 public:
  ReportAuthorizeRequest();
  virtual ~ReportAuthorizeRequest();
  
  ReportAuthorizeRequest(const ReportAuthorizeRequest& from);
  
  inline ReportAuthorizeRequest& operator=(const ReportAuthorizeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportAuthorizeRequest& default_instance();
  
  void Swap(ReportAuthorizeRequest* other);
  
  // implements Message ----------------------------------------------
  
  ReportAuthorizeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReportAuthorizeRequest& from);
  void MergeFrom(const ReportAuthorizeRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.exchange.PartitionId partition_id = 1;
  inline bool has_partition_id() const;
  inline void clear_partition_id();
  static const int kPartitionIdFieldNumber = 1;
  inline const ::bnet::protocol::exchange::PartitionId& partition_id() const;
  inline ::bnet::protocol::exchange::PartitionId* mutable_partition_id();
  
  // required .bnet.protocol.exchange.PartitionId token = 2;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 2;
  inline const ::bnet::protocol::exchange::PartitionId& token() const;
  inline ::bnet::protocol::exchange::PartitionId* mutable_token();
  
  // required uint64 result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::uint64 result() const;
  inline void set_result(::google::protobuf::uint64 value);
  
  // optional .bnet.protocol.exchange.BlobFromOfType auth_handle = 4;
  inline bool has_auth_handle() const;
  inline void clear_auth_handle();
  static const int kAuthHandleFieldNumber = 4;
  inline const ::bnet::protocol::exchange::BlobFromOfType& auth_handle() const;
  inline ::bnet::protocol::exchange::BlobFromOfType* mutable_auth_handle();
  
  // optional bool defer_delivery = 5;
  inline bool has_defer_delivery() const;
  inline void clear_defer_delivery();
  static const int kDeferDeliveryFieldNumber = 5;
  inline bool defer_delivery() const;
  inline void set_defer_delivery(bool value);
  
  // required .bnet.protocol.EntityId bnet_account_id = 6;
  inline bool has_bnet_account_id() const;
  inline void clear_bnet_account_id();
  static const int kBnetAccountIdFieldNumber = 6;
  inline const ::bnet::protocol::EntityId& bnet_account_id() const;
  inline ::bnet::protocol::EntityId* mutable_bnet_account_id();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange_object_provider.ReportAuthorizeRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::bnet::protocol::exchange::PartitionId* partition_id_;
  ::bnet::protocol::exchange::PartitionId* token_;
  ::google::protobuf::uint64 result_;
  ::bnet::protocol::exchange::BlobFromOfType* auth_handle_;
  bool defer_delivery_;
  ::bnet::protocol::EntityId* bnet_account_id_;
  friend void  protobuf_AddDesc_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto();
  friend void protobuf_AssignDesc_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto();
  friend void protobuf_ShutdownFile_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ReportAuthorizeRequest* default_instance_;
};
// -------------------------------------------------------------------

class ReportSettleRequest : public ::google::protobuf::Message {
 public:
  ReportSettleRequest();
  virtual ~ReportSettleRequest();
  
  ReportSettleRequest(const ReportSettleRequest& from);
  
  inline ReportSettleRequest& operator=(const ReportSettleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportSettleRequest& default_instance();
  
  void Swap(ReportSettleRequest* other);
  
  // implements Message ----------------------------------------------
  
  ReportSettleRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReportSettleRequest& from);
  void MergeFrom(const ReportSettleRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.exchange.PartitionId partition_id = 1;
  inline bool has_partition_id() const;
  inline void clear_partition_id();
  static const int kPartitionIdFieldNumber = 1;
  inline const ::bnet::protocol::exchange::PartitionId& partition_id() const;
  inline ::bnet::protocol::exchange::PartitionId* mutable_partition_id();
  
  // required .bnet.protocol.exchange.PartitionId token = 2;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 2;
  inline const ::bnet::protocol::exchange::PartitionId& token() const;
  inline ::bnet::protocol::exchange::PartitionId* mutable_token();
  
  // required uint64 result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::uint64 result() const;
  inline void set_result(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange_object_provider.ReportSettleRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::bnet::protocol::exchange::PartitionId* partition_id_;
  ::bnet::protocol::exchange::PartitionId* token_;
  ::google::protobuf::uint64 result_;
  friend void  protobuf_AddDesc_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto();
  friend void protobuf_AssignDesc_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto();
  friend void protobuf_ShutdownFile_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ReportSettleRequest* default_instance_;
};
// -------------------------------------------------------------------

class ReportCancelRequest : public ::google::protobuf::Message {
 public:
  ReportCancelRequest();
  virtual ~ReportCancelRequest();
  
  ReportCancelRequest(const ReportCancelRequest& from);
  
  inline ReportCancelRequest& operator=(const ReportCancelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportCancelRequest& default_instance();
  
  void Swap(ReportCancelRequest* other);
  
  // implements Message ----------------------------------------------
  
  ReportCancelRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReportCancelRequest& from);
  void MergeFrom(const ReportCancelRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.exchange.PartitionId partition_id = 1;
  inline bool has_partition_id() const;
  inline void clear_partition_id();
  static const int kPartitionIdFieldNumber = 1;
  inline const ::bnet::protocol::exchange::PartitionId& partition_id() const;
  inline ::bnet::protocol::exchange::PartitionId* mutable_partition_id();
  
  // required .bnet.protocol.exchange.PartitionId token = 2;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 2;
  inline const ::bnet::protocol::exchange::PartitionId& token() const;
  inline ::bnet::protocol::exchange::PartitionId* mutable_token();
  
  // required uint64 result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::uint64 result() const;
  inline void set_result(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange_object_provider.ReportCancelRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::bnet::protocol::exchange::PartitionId* partition_id_;
  ::bnet::protocol::exchange::PartitionId* token_;
  ::google::protobuf::uint64 result_;
  friend void  protobuf_AddDesc_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto();
  friend void protobuf_AssignDesc_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto();
  friend void protobuf_ShutdownFile_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ReportCancelRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetPaymentMethodsRequest : public ::google::protobuf::Message {
 public:
  GetPaymentMethodsRequest();
  virtual ~GetPaymentMethodsRequest();
  
  GetPaymentMethodsRequest(const GetPaymentMethodsRequest& from);
  
  inline GetPaymentMethodsRequest& operator=(const GetPaymentMethodsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPaymentMethodsRequest& default_instance();
  
  void Swap(GetPaymentMethodsRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetPaymentMethodsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPaymentMethodsRequest& from);
  void MergeFrom(const GetPaymentMethodsRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .bnet.protocol.EntityId bnet_account = 1;
  inline bool has_bnet_account() const;
  inline void clear_bnet_account();
  static const int kBnetAccountFieldNumber = 1;
  inline const ::bnet::protocol::EntityId& bnet_account() const;
  inline ::bnet::protocol::EntityId* mutable_bnet_account();
  
  // optional .bnet.protocol.EntityId game_account = 2;
  inline bool has_game_account() const;
  inline void clear_game_account();
  static const int kGameAccountFieldNumber = 2;
  inline const ::bnet::protocol::EntityId& game_account() const;
  inline ::bnet::protocol::EntityId* mutable_game_account();
  
  // optional .bnet.protocol.EntityId toon = 3;
  inline bool has_toon() const;
  inline void clear_toon();
  static const int kToonFieldNumber = 3;
  inline const ::bnet::protocol::EntityId& toon() const;
  inline ::bnet::protocol::EntityId* mutable_toon();
  
  // required string currency = 4;
  inline bool has_currency() const;
  inline void clear_currency();
  static const int kCurrencyFieldNumber = 4;
  inline const ::std::string& currency() const;
  inline void set_currency(const ::std::string& value);
  inline void set_currency(const char* value);
  inline void set_currency(const char* value, size_t size);
  inline ::std::string* mutable_currency();
  
  // required uint32 cash_in_out_mask = 5;
  inline bool has_cash_in_out_mask() const;
  inline void clear_cash_in_out_mask();
  static const int kCashInOutMaskFieldNumber = 5;
  inline ::google::protobuf::uint32 cash_in_out_mask() const;
  inline void set_cash_in_out_mask(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange_object_provider.GetPaymentMethodsRequest)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::bnet::protocol::EntityId* bnet_account_;
  ::bnet::protocol::EntityId* game_account_;
  ::bnet::protocol::EntityId* toon_;
  ::std::string* currency_;
  static const ::std::string _default_currency_;
  ::google::protobuf::uint32 cash_in_out_mask_;
  friend void  protobuf_AddDesc_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto();
  friend void protobuf_AssignDesc_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto();
  friend void protobuf_ShutdownFile_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static GetPaymentMethodsRequest* default_instance_;
};
// -------------------------------------------------------------------

class PaymentMethod : public ::google::protobuf::Message {
 public:
  PaymentMethod();
  virtual ~PaymentMethod();
  
  PaymentMethod(const PaymentMethod& from);
  
  inline PaymentMethod& operator=(const PaymentMethod& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PaymentMethod& default_instance();
  
  void Swap(PaymentMethod* other);
  
  // implements Message ----------------------------------------------
  
  PaymentMethod* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PaymentMethod& from);
  void MergeFrom(const PaymentMethod& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .bnet.protocol.exchange.BlobFrom account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::bnet::protocol::exchange::BlobFrom& account() const;
  inline ::bnet::protocol::exchange::BlobFrom* mutable_account();
  
  // required string description = 2;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 2;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  
  // optional uint64 amount = 3;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 3;
  inline ::google::protobuf::uint64 amount() const;
  inline void set_amount(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange_object_provider.PaymentMethod)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::bnet::protocol::exchange::BlobFrom* account_;
  ::std::string* description_;
  static const ::std::string _default_description_;
  ::google::protobuf::uint64 amount_;
  friend void  protobuf_AddDesc_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto();
  friend void protobuf_AssignDesc_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto();
  friend void protobuf_ShutdownFile_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static PaymentMethod* default_instance_;
};
// -------------------------------------------------------------------

class GetPaymentMethodsResponse : public ::google::protobuf::Message {
 public:
  GetPaymentMethodsResponse();
  virtual ~GetPaymentMethodsResponse();
  
  GetPaymentMethodsResponse(const GetPaymentMethodsResponse& from);
  
  inline GetPaymentMethodsResponse& operator=(const GetPaymentMethodsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPaymentMethodsResponse& default_instance();
  
  void Swap(GetPaymentMethodsResponse* other);
  
  // implements Message ----------------------------------------------
  
  GetPaymentMethodsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPaymentMethodsResponse& from);
  void MergeFrom(const GetPaymentMethodsResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .bnet.protocol.exchange_object_provider.PaymentMethod methods = 1;
  inline int methods_size() const;
  inline void clear_methods();
  static const int kMethodsFieldNumber = 1;
  inline const ::bnet::protocol::exchange_object_provider::PaymentMethod& methods(int index) const;
  inline ::bnet::protocol::exchange_object_provider::PaymentMethod* mutable_methods(int index);
  inline ::bnet::protocol::exchange_object_provider::PaymentMethod* add_methods();
  inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange_object_provider::PaymentMethod >&
      methods() const;
  inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange_object_provider::PaymentMethod >*
      mutable_methods();
  
  // @@protoc_insertion_point(class_scope:bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange_object_provider::PaymentMethod > methods_;
  friend void  protobuf_AddDesc_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto();
  friend void protobuf_AssignDesc_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto();
  friend void protobuf_ShutdownFile_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static GetPaymentMethodsResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// ReportAuthorizeRequest

// required .bnet.protocol.exchange.PartitionId partition_id = 1;
inline bool ReportAuthorizeRequest::has_partition_id() const {
  return _has_bit(0);
}
inline void ReportAuthorizeRequest::clear_partition_id() {
  if (partition_id_ != NULL) partition_id_->::bnet::protocol::exchange::PartitionId::Clear();
  _clear_bit(0);
}
inline const ::bnet::protocol::exchange::PartitionId& ReportAuthorizeRequest::partition_id() const {
  return partition_id_ != NULL ? *partition_id_ : *default_instance_->partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* ReportAuthorizeRequest::mutable_partition_id() {
  _set_bit(0);
  if (partition_id_ == NULL) partition_id_ = new ::bnet::protocol::exchange::PartitionId;
  return partition_id_;
}

// required .bnet.protocol.exchange.PartitionId token = 2;
inline bool ReportAuthorizeRequest::has_token() const {
  return _has_bit(1);
}
inline void ReportAuthorizeRequest::clear_token() {
  if (token_ != NULL) token_->::bnet::protocol::exchange::PartitionId::Clear();
  _clear_bit(1);
}
inline const ::bnet::protocol::exchange::PartitionId& ReportAuthorizeRequest::token() const {
  return token_ != NULL ? *token_ : *default_instance_->token_;
}
inline ::bnet::protocol::exchange::PartitionId* ReportAuthorizeRequest::mutable_token() {
  _set_bit(1);
  if (token_ == NULL) token_ = new ::bnet::protocol::exchange::PartitionId;
  return token_;
}

// required uint64 result = 3;
inline bool ReportAuthorizeRequest::has_result() const {
  return _has_bit(2);
}
inline void ReportAuthorizeRequest::clear_result() {
  result_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 ReportAuthorizeRequest::result() const {
  return result_;
}
inline void ReportAuthorizeRequest::set_result(::google::protobuf::uint64 value) {
  _set_bit(2);
  result_ = value;
}

// optional .bnet.protocol.exchange.BlobFromOfType auth_handle = 4;
inline bool ReportAuthorizeRequest::has_auth_handle() const {
  return _has_bit(3);
}
inline void ReportAuthorizeRequest::clear_auth_handle() {
  if (auth_handle_ != NULL) auth_handle_->::bnet::protocol::exchange::BlobFromOfType::Clear();
  _clear_bit(3);
}
inline const ::bnet::protocol::exchange::BlobFromOfType& ReportAuthorizeRequest::auth_handle() const {
  return auth_handle_ != NULL ? *auth_handle_ : *default_instance_->auth_handle_;
}
inline ::bnet::protocol::exchange::BlobFromOfType* ReportAuthorizeRequest::mutable_auth_handle() {
  _set_bit(3);
  if (auth_handle_ == NULL) auth_handle_ = new ::bnet::protocol::exchange::BlobFromOfType;
  return auth_handle_;
}

// optional bool defer_delivery = 5;
inline bool ReportAuthorizeRequest::has_defer_delivery() const {
  return _has_bit(4);
}
inline void ReportAuthorizeRequest::clear_defer_delivery() {
  defer_delivery_ = false;
  _clear_bit(4);
}
inline bool ReportAuthorizeRequest::defer_delivery() const {
  return defer_delivery_;
}
inline void ReportAuthorizeRequest::set_defer_delivery(bool value) {
  _set_bit(4);
  defer_delivery_ = value;
}

// required .bnet.protocol.EntityId bnet_account_id = 6;
inline bool ReportAuthorizeRequest::has_bnet_account_id() const {
  return _has_bit(5);
}
inline void ReportAuthorizeRequest::clear_bnet_account_id() {
  if (bnet_account_id_ != NULL) bnet_account_id_->::bnet::protocol::EntityId::Clear();
  _clear_bit(5);
}
inline const ::bnet::protocol::EntityId& ReportAuthorizeRequest::bnet_account_id() const {
  return bnet_account_id_ != NULL ? *bnet_account_id_ : *default_instance_->bnet_account_id_;
}
inline ::bnet::protocol::EntityId* ReportAuthorizeRequest::mutable_bnet_account_id() {
  _set_bit(5);
  if (bnet_account_id_ == NULL) bnet_account_id_ = new ::bnet::protocol::EntityId;
  return bnet_account_id_;
}

// -------------------------------------------------------------------

// ReportSettleRequest

// required .bnet.protocol.exchange.PartitionId partition_id = 1;
inline bool ReportSettleRequest::has_partition_id() const {
  return _has_bit(0);
}
inline void ReportSettleRequest::clear_partition_id() {
  if (partition_id_ != NULL) partition_id_->::bnet::protocol::exchange::PartitionId::Clear();
  _clear_bit(0);
}
inline const ::bnet::protocol::exchange::PartitionId& ReportSettleRequest::partition_id() const {
  return partition_id_ != NULL ? *partition_id_ : *default_instance_->partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* ReportSettleRequest::mutable_partition_id() {
  _set_bit(0);
  if (partition_id_ == NULL) partition_id_ = new ::bnet::protocol::exchange::PartitionId;
  return partition_id_;
}

// required .bnet.protocol.exchange.PartitionId token = 2;
inline bool ReportSettleRequest::has_token() const {
  return _has_bit(1);
}
inline void ReportSettleRequest::clear_token() {
  if (token_ != NULL) token_->::bnet::protocol::exchange::PartitionId::Clear();
  _clear_bit(1);
}
inline const ::bnet::protocol::exchange::PartitionId& ReportSettleRequest::token() const {
  return token_ != NULL ? *token_ : *default_instance_->token_;
}
inline ::bnet::protocol::exchange::PartitionId* ReportSettleRequest::mutable_token() {
  _set_bit(1);
  if (token_ == NULL) token_ = new ::bnet::protocol::exchange::PartitionId;
  return token_;
}

// required uint64 result = 3;
inline bool ReportSettleRequest::has_result() const {
  return _has_bit(2);
}
inline void ReportSettleRequest::clear_result() {
  result_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 ReportSettleRequest::result() const {
  return result_;
}
inline void ReportSettleRequest::set_result(::google::protobuf::uint64 value) {
  _set_bit(2);
  result_ = value;
}

// -------------------------------------------------------------------

// ReportCancelRequest

// required .bnet.protocol.exchange.PartitionId partition_id = 1;
inline bool ReportCancelRequest::has_partition_id() const {
  return _has_bit(0);
}
inline void ReportCancelRequest::clear_partition_id() {
  if (partition_id_ != NULL) partition_id_->::bnet::protocol::exchange::PartitionId::Clear();
  _clear_bit(0);
}
inline const ::bnet::protocol::exchange::PartitionId& ReportCancelRequest::partition_id() const {
  return partition_id_ != NULL ? *partition_id_ : *default_instance_->partition_id_;
}
inline ::bnet::protocol::exchange::PartitionId* ReportCancelRequest::mutable_partition_id() {
  _set_bit(0);
  if (partition_id_ == NULL) partition_id_ = new ::bnet::protocol::exchange::PartitionId;
  return partition_id_;
}

// required .bnet.protocol.exchange.PartitionId token = 2;
inline bool ReportCancelRequest::has_token() const {
  return _has_bit(1);
}
inline void ReportCancelRequest::clear_token() {
  if (token_ != NULL) token_->::bnet::protocol::exchange::PartitionId::Clear();
  _clear_bit(1);
}
inline const ::bnet::protocol::exchange::PartitionId& ReportCancelRequest::token() const {
  return token_ != NULL ? *token_ : *default_instance_->token_;
}
inline ::bnet::protocol::exchange::PartitionId* ReportCancelRequest::mutable_token() {
  _set_bit(1);
  if (token_ == NULL) token_ = new ::bnet::protocol::exchange::PartitionId;
  return token_;
}

// required uint64 result = 3;
inline bool ReportCancelRequest::has_result() const {
  return _has_bit(2);
}
inline void ReportCancelRequest::clear_result() {
  result_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 ReportCancelRequest::result() const {
  return result_;
}
inline void ReportCancelRequest::set_result(::google::protobuf::uint64 value) {
  _set_bit(2);
  result_ = value;
}

// -------------------------------------------------------------------

// GetPaymentMethodsRequest

// optional .bnet.protocol.EntityId bnet_account = 1;
inline bool GetPaymentMethodsRequest::has_bnet_account() const {
  return _has_bit(0);
}
inline void GetPaymentMethodsRequest::clear_bnet_account() {
  if (bnet_account_ != NULL) bnet_account_->::bnet::protocol::EntityId::Clear();
  _clear_bit(0);
}
inline const ::bnet::protocol::EntityId& GetPaymentMethodsRequest::bnet_account() const {
  return bnet_account_ != NULL ? *bnet_account_ : *default_instance_->bnet_account_;
}
inline ::bnet::protocol::EntityId* GetPaymentMethodsRequest::mutable_bnet_account() {
  _set_bit(0);
  if (bnet_account_ == NULL) bnet_account_ = new ::bnet::protocol::EntityId;
  return bnet_account_;
}

// optional .bnet.protocol.EntityId game_account = 2;
inline bool GetPaymentMethodsRequest::has_game_account() const {
  return _has_bit(1);
}
inline void GetPaymentMethodsRequest::clear_game_account() {
  if (game_account_ != NULL) game_account_->::bnet::protocol::EntityId::Clear();
  _clear_bit(1);
}
inline const ::bnet::protocol::EntityId& GetPaymentMethodsRequest::game_account() const {
  return game_account_ != NULL ? *game_account_ : *default_instance_->game_account_;
}
inline ::bnet::protocol::EntityId* GetPaymentMethodsRequest::mutable_game_account() {
  _set_bit(1);
  if (game_account_ == NULL) game_account_ = new ::bnet::protocol::EntityId;
  return game_account_;
}

// optional .bnet.protocol.EntityId toon = 3;
inline bool GetPaymentMethodsRequest::has_toon() const {
  return _has_bit(2);
}
inline void GetPaymentMethodsRequest::clear_toon() {
  if (toon_ != NULL) toon_->::bnet::protocol::EntityId::Clear();
  _clear_bit(2);
}
inline const ::bnet::protocol::EntityId& GetPaymentMethodsRequest::toon() const {
  return toon_ != NULL ? *toon_ : *default_instance_->toon_;
}
inline ::bnet::protocol::EntityId* GetPaymentMethodsRequest::mutable_toon() {
  _set_bit(2);
  if (toon_ == NULL) toon_ = new ::bnet::protocol::EntityId;
  return toon_;
}

// required string currency = 4;
inline bool GetPaymentMethodsRequest::has_currency() const {
  return _has_bit(3);
}
inline void GetPaymentMethodsRequest::clear_currency() {
  if (currency_ != &_default_currency_) {
    currency_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& GetPaymentMethodsRequest::currency() const {
  return *currency_;
}
inline void GetPaymentMethodsRequest::set_currency(const ::std::string& value) {
  _set_bit(3);
  if (currency_ == &_default_currency_) {
    currency_ = new ::std::string;
  }
  currency_->assign(value);
}
inline void GetPaymentMethodsRequest::set_currency(const char* value) {
  _set_bit(3);
  if (currency_ == &_default_currency_) {
    currency_ = new ::std::string;
  }
  currency_->assign(value);
}
inline void GetPaymentMethodsRequest::set_currency(const char* value, size_t size) {
  _set_bit(3);
  if (currency_ == &_default_currency_) {
    currency_ = new ::std::string;
  }
  currency_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetPaymentMethodsRequest::mutable_currency() {
  _set_bit(3);
  if (currency_ == &_default_currency_) {
    currency_ = new ::std::string;
  }
  return currency_;
}

// required uint32 cash_in_out_mask = 5;
inline bool GetPaymentMethodsRequest::has_cash_in_out_mask() const {
  return _has_bit(4);
}
inline void GetPaymentMethodsRequest::clear_cash_in_out_mask() {
  cash_in_out_mask_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 GetPaymentMethodsRequest::cash_in_out_mask() const {
  return cash_in_out_mask_;
}
inline void GetPaymentMethodsRequest::set_cash_in_out_mask(::google::protobuf::uint32 value) {
  _set_bit(4);
  cash_in_out_mask_ = value;
}

// -------------------------------------------------------------------

// PaymentMethod

// required .bnet.protocol.exchange.BlobFrom account = 1;
inline bool PaymentMethod::has_account() const {
  return _has_bit(0);
}
inline void PaymentMethod::clear_account() {
  if (account_ != NULL) account_->::bnet::protocol::exchange::BlobFrom::Clear();
  _clear_bit(0);
}
inline const ::bnet::protocol::exchange::BlobFrom& PaymentMethod::account() const {
  return account_ != NULL ? *account_ : *default_instance_->account_;
}
inline ::bnet::protocol::exchange::BlobFrom* PaymentMethod::mutable_account() {
  _set_bit(0);
  if (account_ == NULL) account_ = new ::bnet::protocol::exchange::BlobFrom;
  return account_;
}

// required string description = 2;
inline bool PaymentMethod::has_description() const {
  return _has_bit(1);
}
inline void PaymentMethod::clear_description() {
  if (description_ != &_default_description_) {
    description_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& PaymentMethod::description() const {
  return *description_;
}
inline void PaymentMethod::set_description(const ::std::string& value) {
  _set_bit(1);
  if (description_ == &_default_description_) {
    description_ = new ::std::string;
  }
  description_->assign(value);
}
inline void PaymentMethod::set_description(const char* value) {
  _set_bit(1);
  if (description_ == &_default_description_) {
    description_ = new ::std::string;
  }
  description_->assign(value);
}
inline void PaymentMethod::set_description(const char* value, size_t size) {
  _set_bit(1);
  if (description_ == &_default_description_) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PaymentMethod::mutable_description() {
  _set_bit(1);
  if (description_ == &_default_description_) {
    description_ = new ::std::string;
  }
  return description_;
}

// optional uint64 amount = 3;
inline bool PaymentMethod::has_amount() const {
  return _has_bit(2);
}
inline void PaymentMethod::clear_amount() {
  amount_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 PaymentMethod::amount() const {
  return amount_;
}
inline void PaymentMethod::set_amount(::google::protobuf::uint64 value) {
  _set_bit(2);
  amount_ = value;
}

// -------------------------------------------------------------------

// GetPaymentMethodsResponse

// repeated .bnet.protocol.exchange_object_provider.PaymentMethod methods = 1;
inline int GetPaymentMethodsResponse::methods_size() const {
  return methods_.size();
}
inline void GetPaymentMethodsResponse::clear_methods() {
  methods_.Clear();
}
inline const ::bnet::protocol::exchange_object_provider::PaymentMethod& GetPaymentMethodsResponse::methods(int index) const {
  return methods_.Get(index);
}
inline ::bnet::protocol::exchange_object_provider::PaymentMethod* GetPaymentMethodsResponse::mutable_methods(int index) {
  return methods_.Mutable(index);
}
inline ::bnet::protocol::exchange_object_provider::PaymentMethod* GetPaymentMethodsResponse::add_methods() {
  return methods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange_object_provider::PaymentMethod >&
GetPaymentMethodsResponse::methods() const {
  return methods_;
}
inline ::google::protobuf::RepeatedPtrField< ::bnet::protocol::exchange_object_provider::PaymentMethod >*
GetPaymentMethodsResponse::mutable_methods() {
  return &methods_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace exchange_object_provider
}  // namespace protocol
}  // namespace bnet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_lib_2fprotocol_2fexchange_5fobject_5fprovider_2eproto__INCLUDED
